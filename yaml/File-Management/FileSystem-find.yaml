asyncapi: 3.0.0
info:
  title: FileSystem Service find API
  version: 1.0.0
  description: This API allows clients to interact with the find interaction of the FileSystem Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the FileSystem Service's find interaction.
    variables:
      port:
        default: '8883'
channels:
  progress_FileSystem_find:
    address: progress_FileSystem_find
    messages:
      FileSystem.find_progress.message:
        $ref: '#/components/messages/FileSystem_find_progress'
    description: >
      Send a **FileSystem_find_progress** message in this channel to receive a
      **FileSystem_find_update** message over the **update_FileSystem_find** channel.
  update_FileSystem_find:
    address: update_FileSystem_find
    messages:
      FileSystem.find_update.message:
        $ref: '#/components/messages/FileSystem_find_update'
    description: >
      Use this channel to receive FileSystem find responses as **FileSystem_find_update**
      messages.
  response_FileSystem_find:
    address: response_FileSystem_find
    messages:
      FileSystem.find_response.message:
        $ref: '#/components/messages/FileSystem_find_response'
    description: >
      Use this channel to receive additional FileSystem find responses as **FileSystem_find_response**
      messages.
  error_FileSystem_find:
    address: error_FileSystem_find
    messages:
      FileSystem.find_error.message:
        $ref: '#/components/messages/FileSystem_find_error'
    description: >
      Use this channel to receive FileSystem find errors as **FileSystem_find_updateErrors**
      messages.
operations:
  FileSystem_find_progress:
    action: send
    channel:
      $ref: '#/channels/progress_FileSystem_find'
    messages:
      - $ref: '#/channels/progress_FileSystem_find/messages/FileSystem.find_progress.message'
  FileSystem_find_update:
    action: receive
    channel:
      $ref: '#/channels/update_FileSystem_find'
    messages:
      - $ref: '#/channels/update_FileSystem_find/messages/FileSystem.find_update.message'
  FileSystem_find_response:
    action: receive
    channel:
      $ref: '#/channels/response_FileSystem_find'
    messages:
      - $ref: '#/channels/response_FileSystem_find/messages/FileSystem.find_response.message'
  FileSystem_find_error:
    action: receive
    channel:
      $ref: '#/channels/error_FileSystem_find'
    messages:
      - $ref: '#/channels/error_FileSystem_find/messages/FileSystem.find_error.message'
components:
  schemas:
    FileSystem_find_progress:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        path:
          type: string
          format: uri
          description: |
            The location from where the search will be done.
        toFile:
          type: boolean
          description: |
            Set to true if the list should be written to a file. If toFile is true then the Update contails the path to the file with the list.
        searchPattern:
          type: string
          description: |
            Regular expression to be matched against files in the Directory. Only files that match will be returned. If null all files nodes will match.
    FileSystem_find_update:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        nodes:
          $ref: '#/components/schemas/fm/file_system/Node'
    FileSystem_find_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        count:
          type: integer
          format: uint32
          description: |
            Number of matches
    FileSystem_find_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - FM
        name:
          type: string
          description: A code representing the error.
          enum:
            - PERMISSION_DENIED
            - INVALID_PATH
            - NODE_NOT_FOUND
            - NOT_A_DIRECTORY
            - IO_ERROR
            - OTHER
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    fm:
      file_system:
        Node:
          properties:
            lmTime:
              description: 'Last modified time in seconds. Settable: no'
              format: int64
              type: integer
            owner:
              description: The owner of the file
              type: string
            path:
              description: ''
              format: uri
              type: string
            permissions:
              description: 'The node permissions. Settable: no'
              type: string
            size:
              description: 'Size of the node in byte. Settable: no'
              format: uint32
              type: integer
            type_:
              $ref: '#/components/schemas/fm/file_system/NodeType'
              description: ''
          type: object
        NodeType:
          description: List of possible node types
          enum:
          - FILE
          - DIRECTORY
          type: string
  messages:
    FileSystem_find_progress:
      description: FileSystem find request submission
      payload:
        $ref: '#/components/schemas/FileSystem_find_progress'
    FileSystem_find_update:
      description: FileSystem find update response
      payload:
        $ref: '#/components/schemas/FileSystem_find_update'
    FileSystem_find_response:
      description: FileSystem find update response
      payload:
        $ref: '#/components/schemas/FileSystem_find_response'
    FileSystem_find_error:
      description: FileSystem find error response
      payload:
        $ref: '#/components/schemas/FileSystem_find_error'
