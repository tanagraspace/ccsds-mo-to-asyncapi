asyncapi: 3.0.0
info:
  title: AppsLauncher Service API
  version: 1.0.0
  description: This API allows clients to interact with the AppsLauncher Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the AppsLauncher Service.
    variables:
      port:
        default: '8883'
channels:
  monitorExecution_publishNotify:
    address: null
    messages:
      monitorExecution_publishNotify.message:
        $ref: '#/components/messages/monitorExecution_publishNotify'
    description: >
      Use this channel to receive monitorExecution responses as **monitorExecution_publishNotify**
      messages.
  runApp_submit:
    address: runApp_submit
    messages:
      runApp_submit.message:
        $ref: '#/components/messages/runApp_submit'
    description: >
      Send a **runApp_submit** message in this channel.
  runApp_error:
    address: runApp_error
    messages:
      runApp_error.message:
        $ref: '#/components/messages/runApp_error'
    description: >
      Use this channel to receive runApp errors as **runApp_error**
      messages.
  killApp_submit:
    address: killApp_submit
    messages:
      killApp_submit.message:
        $ref: '#/components/messages/killApp_submit'
    description: >
      Send a **killApp_submit** message in this channel.
  killApp_error:
    address: killApp_error
    messages:
      killApp_error.message:
        $ref: '#/components/messages/killApp_error'
    description: >
      Use this channel to receive killApp errors as **killApp_error**
      messages.
  stopApp_progress:
    address: stopApp_progress
    messages:
      stopApp_progress.message:
        $ref: '#/components/messages/stopApp_progress'
    description: >
      Send a **stopApp_progress** message in this channel to receive a
      **stopApp_update** message over the **stopApp_update** channel.
  stopApp_update:
    address: null
    messages:
      stopApp_update.message:
        $ref: '#/components/messages/stopApp_update'
    description: >
      Use this channel to receive stopApp responses as **stopApp_update**
      messages.
  listApp_request:
    address: listApp_request
    messages:
      listApp_request.message:
        $ref: '#/components/messages/listApp_request'
    description: >
      Send a **listApp_request** message in this channel to receive a
      **listApp_response** message over the **listApp_response** channel.
  listApp_response:
    address: null
    messages:
      listApp_response.message:
        $ref: '#/components/messages/listApp_response'
    description: >
      Use this channel to receive listApp responses as **listApp_response**
      messages.
  listApp_error:
    address: listApp_error
    messages:
      listApp_error.message:
        $ref: '#/components/messages/listApp_error'
    description: >
      Use this channel to receive listApp errors as **listApp_error**
      messages.
operations:
  monitorExecution_publishNotify:
    action: receive
    channel:
      $ref: '#/channels/monitorExecution_publishNotify'
    messages:
      - $ref: '#/channels/monitorExecution_publishNotify/messages/monitorExecution_publishNotify.message'
  runApp_submit:
    action: send
    channel:
      $ref: '#/channels/runApp_submit'
    messages:
      - $ref: '#/channels/runApp_submit/messages/runApp_submit.message'
  runApp_error:
    action: receive
    channel:
      $ref: '#/channels/runApp_error'
    messages:
      - $ref: '#/channels/runApp_error/messages/runApp_error.message'
  killApp_submit:
    action: send
    channel:
      $ref: '#/channels/killApp_submit'
    messages:
      - $ref: '#/channels/killApp_submit/messages/killApp_submit.message'
  killApp_error:
    action: receive
    channel:
      $ref: '#/channels/killApp_error'
    messages:
      - $ref: '#/channels/killApp_error/messages/killApp_error.message'
  stopApp_progress:
    action: send
    channel:
      $ref: '#/channels/stopApp_progress'
    messages:
      - $ref: '#/channels/stopApp_progress/messages/stopApp_progress.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/stopApp_update'
  stopApp_update:
    action: receive
    channel:
      $ref: '#/channels/stopApp_update'
    messages:
      - $ref: '#/channels/stopApp_update/messages/stopApp_update.message'
  listApp_request:
    action: send
    channel:
      $ref: '#/channels/listApp_request'
    messages:
      - $ref: '#/channels/listApp_request/messages/listApp_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/listApp_response'
  listApp_response:
    action: receive
    channel:
      $ref: '#/channels/listApp_response'
    messages:
      - $ref: '#/channels/listApp_response/messages/listApp_response.message'
  listApp_error:
    action: receive
    channel:
      $ref: '#/channels/listApp_error'
    messages:
      - $ref: '#/channels/listApp_error/messages/listApp_error.message'
components:
  schemas:
    monitorExecution_publishNotify:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        outputStream:
          type: string
          description: |
            The outputStream field shall contain a stream of characters corresponding to the output stream of the application.
            The MAL EntityKey.firstSubKey shall contain the App name.
            The MAL EntityKey.secondSubKey shall contain the AppDetails object instance identifier.
            The MAL EntityKey.thirdSubKey shall be NULL.
            The MAL EntityKey.fourthSubKey shall be NULL.
            The timestamp of the update shall be the on-board time when the update was published.
            The publish message shall include the ObjectId of the source link of the update.
            If no source link is needed then the ObjectId shall be replaced with a NULL.
    runApp_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        appInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The appInstIds field contains the list of apps to run.
    runApp_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
            - INVALID
            - INTERNAL
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    killApp_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        appInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The appInstIds field contains the list of apps to be killed.
    killApp_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
            - INVALID
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    stopApp_progress:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        appInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The appInstIds field contains the list of apps to stop.
    stopApp_update:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        appClosing:
          type: integer
          format: int64
          description: |
            The appClosing field shall contain the object instance identifier of an app. This update shall be sent after the app acknowledges the reception of the command to stop.
    listApp_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        appNames:
          type: array
          items:
            type: string
          description: |
            The appNames field contains a list of application names.
        category:
          type: string
          description: |
            The category field contains the category identifier to filter on.
    listApp_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        appInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The appInstIds field contains a list of apps.
        running:
          type: array
          items:
            type: boolean
          description: |
            The running field contains a list of boolean values with the information about thte running status of requested apps.
            The returned lists shall maintain the same order as the submitted list unless the wildcard value was included in the appNames field request.
    listApp_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
  messages:
    monitorExecution_publishNotify:
      description: monitorExecution response
      payload:
        $ref: '#/components/schemas/monitorExecution_publishNotify'
    runApp_submit:
      description: runApp request
      payload:
        $ref: '#/components/schemas/runApp_submit'
    runApp_error:
      description: runApp error response
      payload:
        $ref: '#/components/schemas/runApp_error'
    killApp_submit:
      description: killApp request
      payload:
        $ref: '#/components/schemas/killApp_submit'
    killApp_error:
      description: killApp error response
      payload:
        $ref: '#/components/schemas/killApp_error'
    stopApp_progress:
      description: stopApp request
      payload:
        $ref: '#/components/schemas/stopApp_progress'
    stopApp_update:
      description: stopApp response
      payload:
        $ref: '#/components/schemas/stopApp_update'
    listApp_request:
      description: listApp request
      payload:
        $ref: '#/components/schemas/listApp_request'
    listApp_response:
      description: listApp response
      payload:
        $ref: '#/components/schemas/listApp_response'
    listApp_error:
      description: listApp error response
      payload:
        $ref: '#/components/schemas/listApp_error'
