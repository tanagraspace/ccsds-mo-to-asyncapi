asyncapi: 3.0.0
info:
  title: PackageManagement Service checkPackageIntegrity API
  version: 1.0.0
  description: This API allows clients to interact with the checkPackageIntegrity interaction of the PackageManagement Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the PackageManagement Service's checkPackageIntegrity interaction.
    variables:
      port:
        default: '8883'
channels:
  request_PackageManagement_checkPackageIntegrity:
    address: request_PackageManagement_checkPackageIntegrity
    messages:
      PackageManagement.checkPackageIntegrity_request.message:
        $ref: '#/components/messages/PackageManagement_checkPackageIntegrity_request'
    description: >
      Send a **PackageManagement_checkPackageIntegrity_request** message in this channel to receive a
      **PackageManagement_checkPackageIntegrity_response** message over the **response_PackageManagement_checkPackageIntegrity** channel.
  response_PackageManagement_checkPackageIntegrity:
    address: response_PackageManagement_checkPackageIntegrity
    messages:
      PackageManagement.checkPackageIntegrity_response.message:
        $ref: '#/components/messages/PackageManagement_checkPackageIntegrity_response'
    description: >
      Use this channel to receive PackageManagement checkPackageIntegrity responses as **PackageManagement_checkPackageIntegrity_response**
      messages.
  error_PackageManagement_checkPackageIntegrity:
    address: error_PackageManagement_checkPackageIntegrity
    messages:
      PackageManagement.checkPackageIntegrity_error.message:
        $ref: '#/components/messages/PackageManagement_checkPackageIntegrity_error'
    description: >
      Use this channel to receive PackageManagement checkPackageIntegrity errors as **PackageManagement_checkPackageIntegrity_responseErrors**
      messages.
operations:
  PackageManagement_checkPackageIntegrity_request:
    action: send
    channel:
      $ref: '#/channels/request_PackageManagement_checkPackageIntegrity'
    messages:
      - $ref: '#/channels/request_PackageManagement_checkPackageIntegrity/messages/PackageManagement.checkPackageIntegrity_request.message'
  PackageManagement_checkPackageIntegrity_response:
    action: receive
    channel:
      $ref: '#/channels/response_PackageManagement_checkPackageIntegrity'
    messages:
      - $ref: '#/channels/response_PackageManagement_checkPackageIntegrity/messages/PackageManagement.checkPackageIntegrity_response.message'
  PackageManagement_checkPackageIntegrity_error:
    action: receive
    channel:
      $ref: '#/channels/error_PackageManagement_checkPackageIntegrity'
    messages:
      - $ref: '#/channels/error_PackageManagement_checkPackageIntegrity/messages/PackageManagement.checkPackageIntegrity_error.message'
components:
  schemas:
    PackageManagement_checkPackageIntegrity_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        names:
          type: array
          items:
            type: string
          description: |
            The names field contains the names of the packages.
    PackageManagement_checkPackageIntegrity_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        validCRCs:
          type: array
          items:
            type: boolean
        publicKeys:
          type: array
          items:
            type: string
    PackageManagement_checkPackageIntegrity_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
  messages:
    PackageManagement_checkPackageIntegrity_request:
      description: PackageManagement checkPackageIntegrity request submission
      payload:
        $ref: '#/components/schemas/PackageManagement_checkPackageIntegrity_request'
    PackageManagement_checkPackageIntegrity_response:
      description: PackageManagement checkPackageIntegrity update response
      payload:
        $ref: '#/components/schemas/PackageManagement_checkPackageIntegrity_response'
    PackageManagement_checkPackageIntegrity_error:
      description: PackageManagement checkPackageIntegrity error response
      payload:
        $ref: '#/components/schemas/PackageManagement_checkPackageIntegrity_error'
