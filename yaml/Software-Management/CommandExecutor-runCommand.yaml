asyncapi: 3.0.0
info:
  title: CommandExecutor Service runCommand API
  version: 1.0.0
  description: This API allows clients to interact with the runCommand interaction of the CommandExecutor Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the CommandExecutor Service's runCommand interaction.
    variables:
      port:
        default: '8883'
channels:
  request_CommandExecutor_runCommand:
    address: request_CommandExecutor_runCommand
    messages:
      CommandExecutor.runCommand_request.message:
        $ref: '#/components/messages/CommandExecutor_runCommand_request'
    description: >
      Send a **CommandExecutor_runCommand_request** message in this channel to receive a
      **CommandExecutor_runCommand_response** message over the **response_CommandExecutor_runCommand** channel.
  response_CommandExecutor_runCommand:
    address: response_CommandExecutor_runCommand
    messages:
      CommandExecutor.runCommand_response.message:
        $ref: '#/components/messages/CommandExecutor_runCommand_response'
    description: >
      Use this channel to receive CommandExecutor runCommand responses as **CommandExecutor_runCommand_response**
      messages.
operations:
  CommandExecutor_runCommand_request:
    action: send
    channel:
      $ref: '#/channels/request_CommandExecutor_runCommand'
    messages:
      - $ref: '#/channels/request_CommandExecutor_runCommand/messages/CommandExecutor.runCommand_request.message'
  CommandExecutor_runCommand_response:
    action: receive
    channel:
      $ref: '#/channels/response_CommandExecutor_runCommand'
    messages:
      - $ref: '#/channels/response_CommandExecutor_runCommand/messages/CommandExecutor.runCommand_response.message'
components:
  schemas:
    CommandExecutor_runCommand_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        command:
          $ref: '#/components/schemas/software_management/command_executor/CommandDetails'
          description: |
            Details of the command to be run.
    CommandExecutor_runCommand_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        commandInstId:
          type: integer
          format: int64
          description: |
            Contains a corresponding COM object instance identifier created in the Archive.
    software_management:
      command_executor:
        CommandDetails:
          properties:
            command:
              description: The command line passed to the executing shell instance.
              type: string
            exitCode:
              description: Exit code of the command. Shall be NULL if the execution has not
                completed yet.
              format: int32
              type: integer
            pid:
              description: Assigned Process ID of the spawned shell instance. Shall be NULL
                if the execution has not started yet.
              format: uint32
              type: integer
          type: object
  messages:
    CommandExecutor_runCommand_request:
      description: CommandExecutor runCommand request submission
      payload:
        $ref: '#/components/schemas/CommandExecutor_runCommand_request'
    CommandExecutor_runCommand_response:
      description: CommandExecutor runCommand update response
      payload:
        $ref: '#/components/schemas/CommandExecutor_runCommand_response'
