asyncapi: 3.0.0
info:
  title: Alert Service updateDefinition API
  version: 1.0.0
  description: This API allows clients to interact with the updateDefinition interaction of the Alert Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the Alert Service's updateDefinition interaction.
    variables:
      port:
        default: '8883'
channels:
  request_Alert_updateDefinition:
    address: request_Alert_updateDefinition
    messages:
      Alert.updateDefinition_request.message:
        $ref: '#/components/messages/Alert_updateDefinition_request'
    description: >
      Send a **Alert_updateDefinition_request** message in this channel to receive a
      **Alert_updateDefinition_response** message over the **response_Alert_updateDefinition** channel.
  response_Alert_updateDefinition:
    address: response_Alert_updateDefinition
    messages:
      Alert.updateDefinition_response.message:
        $ref: '#/components/messages/Alert_updateDefinition_response'
    description: >
      Use this channel to receive Alert updateDefinition responses as **Alert_updateDefinition_response**
      messages.
  error_Alert_updateDefinition:
    address: error_Alert_updateDefinition
    messages:
      Alert.updateDefinition_error.message:
        $ref: '#/components/messages/Alert_updateDefinition_error'
    description: >
      Use this channel to receive Alert updateDefinition errors as **Alert_updateDefinition_responseErrors**
      messages.
operations:
  Alert_updateDefinition_request:
    action: send
    channel:
      $ref: '#/channels/request_Alert_updateDefinition'
    messages:
      - $ref: '#/channels/request_Alert_updateDefinition/messages/Alert.updateDefinition_request.message'
  Alert_updateDefinition_response:
    action: receive
    channel:
      $ref: '#/channels/response_Alert_updateDefinition'
    messages:
      - $ref: '#/channels/response_Alert_updateDefinition/messages/Alert.updateDefinition_response.message'
  Alert_updateDefinition_error:
    action: receive
    channel:
      $ref: '#/channels/error_Alert_updateDefinition'
    messages:
      - $ref: '#/channels/error_Alert_updateDefinition/messages/Alert.updateDefinition_error.message'
components:
  schemas:
    Alert_updateDefinition_request:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        alertObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The alertObjInstIds field shall contain the object instance identifiers of the AlertIdentity objects to be updated.
            The supplied object instance identifiers shall match existing identity objects, an UNKNOWN error shall be raised if this is not the case.
            If the alertObjInstIds list contains either NULL or '0' an INVALID error shall be raised.
        alertDefDetails:
          $ref: '#/components/schemas/mc/alert/AlertDefinitionDetails'
          description: |
            The alertDefDetails field shall contain the replacement AlertDefinitionDetails.
            The two lists shall be ordered the same.
            The number of entries in the two lists shall be the same size otherwise an INVALID error shall be returned.
            If an error is raised then no definitions shall be updated as a result of this operation call.
            The provider shall create a new AlertDefinition object and store it in the COM archive.
            The new AlertDefinition object shall be the current AlertDefinition used for the specific AlertIdentity.
    Alert_updateDefinition_response:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        newObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The response shall contain the list of object instance identifiers for the new AlertDefinition objects.
            The returned list shall maintain the same order as the submitted definitions.
    Alert_updateDefinition_error:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - COM
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - INVALID
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    mc:
      alert:
        AlertDefinitionDetails:
          properties:
            arguments:
              description: The list of argument definitions.
              items:
                $ref: '#/components/schemas/mc/ArgumentDefinitionDetails'
              type: array
            description:
              description: The description of the alert.
              type: string
            generationEnabled:
              description: Controls whether instances of this alert are to be generated.
              type: boolean
            severity:
              $ref: '#/components/schemas/mc/Severity'
              description: Severity of the alert.
          type: object
      ArgumentDefinitionDetails:
        properties:
          argId:
            description: Holds the argument definition identifier.
            type: string
          conditionalConversions:
            description: The conditional conversions to apply to the argument. Only the first
              TRUE conversion should be applied.
            items:
              $ref: '#/components/schemas/mc/ConditionalConversion'
            type: array
          convertedType:
            description: Holds the attribute short form part of the converted type of the
              argument, e.g., for a MAL::String argument it shall hold 15. Must not be NULL
              if a conversion condition is supplied.
            format: int8
            type: integer
          convertedUnit:
            description: The converted argument units.
            type: string
          description:
            description: Optional argument description.
            type: string
          rawType:
            description: Holds the attribute short form part of the raw type of the argument,
              e.g., for a MAL::String argument it shall hold 15.
            format: int8
            type: integer
          rawUnit:
            description: The unit for the raw value.
            type: string
        type: object
      ConditionalConversion:
        properties:
          condition:
            $ref: '#/components/schemas/mc/ParameterExpression'
            description: The expression indicates which entities are applicable for this check.
              If NULL, then the condition shall evaluate to TRUE.
          conversionId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: The object instance identifier of the ConversionIdentity object to
              be used if the condition evaluates to TRUE or is NULL.
        type: object
      ParameterExpression:
        properties:
          operator:
            $ref: '#/components/schemas/com/archive/ExpressionOperator'
            description: The expression operator.
          parameterId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: Holds the object instance identifier of the ParameterIdentity object
              to be used in the expression.
          useConverted:
            description: If set to TRUE the converted value field of the parameter value should
              be used, otherwise the raw value field should be used.
            type: boolean
          value:
            description: The value to be used in the expression.
            type: string
        type: object
      Severity:
        description: 'The severity enumeration holds the possible values for a severity. The
          numerical value represents the increasing severity, therefore CRITICAL is more severe
          than ALARM. Normally, for checks, only the Warning and Critical ranges are used:
          the colour yellow is associated with Warning, and the colour red is associated with
          Critical.'
        enum:
        - INFORMATIONAL
        - WARNING
        - ALARM
        - SEVERE
        - CRITICAL
        type: string
    com:
      ObjectKey:
        properties:
          domain:
            description: The domain of the object instance.
            items:
              type: string
            type: array
          instId:
            description: The unique identifier of the object instance. Must not be '0' for
              values as this is the wildcard.
            format: int64
            type: integer
        type: object
      archive:
        ExpressionOperator:
          description: The ExpressionOperator enumeration holds a set of possible expression
            operators.
          enum:
          - EQUAL
          - DIFFER
          - GREATER
          - GREATER_OR_EQUAL
          - LESS
          - LESS_OR_EQUAL
          - CONTAINS
          - ICONTAINS
          type: string
  messages:
    Alert_updateDefinition_request:
      description: Alert updateDefinition request submission
      payload:
        $ref: '#/components/schemas/Alert_updateDefinition_request'
    Alert_updateDefinition_response:
      description: Alert updateDefinition update response
      payload:
        $ref: '#/components/schemas/Alert_updateDefinition_response'
    Alert_updateDefinition_error:
      description: Alert updateDefinition error response
      payload:
        $ref: '#/components/schemas/Alert_updateDefinition_error'
