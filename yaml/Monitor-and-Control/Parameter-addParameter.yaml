asyncapi: 3.0.0
info:
  title: Parameter Service addParameter API
  version: 1.0.0
  description: This API allows clients to interact with the addParameter iteraction of the Parameter Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the addParameter interaction.
    variables:
      port:
        enum:
          - '8883'
          - '8884'
        default: '8883'
    bindings:
      mqtt:
        clientId: guest
        cleanSession: false
        keepAlive: 0
        lastWill:
          topic: /will
          qos: 0
          message: Guest gone offline.
          retain: false
channels:
  Send_Parameter_addParameter:
    address: Send_Parameter_addParameter
    messages:
      Parameter.addParameter_Send.message:
        $ref: '#/components/messages/Parameter_addParameter_Send'
    description: >
      Send a **Parameter_addParameter_Send** message in this channel to receive a
      **Parameter_addParameter_Receive** message over the **Receive_Parameter_addParameter** channel.
  Receive_Parameter_addParameter:
    address: Receive_Parameter_addParameter
    messages:
      Parameter.addParameter_Receive.message:
        $ref: '#/components/messages/Parameter_addParameter_Receive'
    description: >
      Use this channel to receive Parameter addParameter responses as **Parameter_addParameter_Receive**
      messages.
  Error_Parameter_addParameter:
    address: Error_Parameter_addParameter
    messages:
      Parameter.addParameter_Error.message:
        $ref: '#/components/messages/Parameter_addParameter_Error'
    description: >
      Use this channel to receive Parameter addParameter errors as **Parameter_addParameter_ReceiveErrors**
      messages.
operations:
  Parameter_addParameter_Send:
    action: send
    channel:
      $ref: '#/channels/Send_Parameter_addParameter'
    messages:
      - $ref: '#/channels/Send_Parameter_addParameter/messages/Parameter.addParameter_Send.message'
  Parameter_addParameter_Receive:
    action: receive
    channel:
      $ref: '#/channels/Receive_Parameter_addParameter'
    messages:
      - $ref: '#/channels/Receive_Parameter_addParameter/messages/Parameter.addParameter_Receive.message'
  Parameter_addParameter_Error:
    action: receive
    channel:
      $ref: '#/channels/Error_Parameter_addParameter'
    messages:
      - $ref: '#/channels/Error_Parameter_addParameter/messages/Parameter.addParameter_Error.message'
components:
  schemas:
    Parameter_addParameter_Send:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        paramDefDetails:
          $ref: '#/components/schemas/mc/parameter/ParameterCreationRequest'
          description: |
            The paramDefDetails field shall hold the name and the ParameterDefinitionDetails to be added.
            The name field must not be the wildcard '*', or empty (an INVALID error shall be returned in this case).
            If the supplied reportInterval value is not supported by the provider then an INVALID error shall be returned.
            The supplied name must be unique among all ParameterIdentity objects for the domain of the provider otherwise a DUPLICATE error shall be raised.
            If an error is raised then no new identities and definitions shall be added as a result of this operation call.
            If the supplied name matches an existing, but removed, ParameterIdentity then that ParameterIdentity shall be reused otherwise a new ParameterIdentity shall be created.
            The provider shall create a new ParameterDefinition object and store it, and any new ParameterIdentity objects, in the COM archive.
    Parameter_addParameter_Receive:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        newObjInstIds:
          $ref: '#/components/schemas/mc/ObjectInstancePair'
          description: |
            The response shall contain the list of object instance identifiers for the ParameterIdentity and new ParameterDefinition objects.
            The returned list shall maintain the same order as the submitted definitions.
    Parameter_addParameter_Error:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - DUPLICATE
            - INVALID
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    mc:
      parameter:
        ParameterConversion:
          properties:
            conditionalConversions:
              description: The conversions to be applied. Only the first TRUE conversion should
                be applied.
              items:
                $ref: '#/components/schemas/mc/ConditionalConversion'
              type: array
            convertedType:
              description: Holds the attribute short form part of the converted type of the
                parameter, e.g., for a MAL::String parameter it shall hold 15.
              format: int8
              type: integer
            convertedUnit:
              description: The converted parameter unit. If NULL then converted type has no
                unit.
              type: string
          type: object
        ParameterCreationRequest:
          properties:
            name:
              description: The name of the parameter. Must not be empty or the wildcard value.
              type: string
            paramDefDetails:
              $ref: '#/components/schemas/mc/parameter/ParameterDefinitionDetails'
              description: The parameter definition details.
          type: object
        ParameterDefinitionDetails:
          properties:
            conversion:
              $ref: '#/components/schemas/mc/parameter/ParameterConversion'
              description: If present then parameter has a converted type.
            description:
              description: The description of the parameter. May be empty.
              type: string
            generationEnabled:
              description: Controls whether reports for this parameter are to be generated.
              type: boolean
            rawType:
              description: Holds the attribute short form part of the raw type of the parameter,
                e.g., for a MAL::String parameter it shall hold 15.
              format: int8
              type: integer
            rawUnit:
              description: The unit for the raw value. If NULL then raw type has no unit.
              type: string
            reportInterval:
              description: Periodic report interval. No periodic reports to be generated if
                this is set to '0'.
              format: uint64
              type: number
            validityExpression:
              $ref: '#/components/schemas/mc/ParameterExpression'
              description: Expression that determines this parameter's validity state. Can be
                NULL if no validity check is required or validity is calculated by implementation-specific
                mechanisms.
          type: object
      ConditionalConversion:
        properties:
          condition:
            $ref: '#/components/schemas/mc/ParameterExpression'
            description: The expression indicates which entities are applicable for this check.
              If NULL, then the condition shall evaluate to TRUE.
          conversionId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: The object instance identifier of the ConversionIdentity object to
              be used if the condition evaluates to TRUE or is NULL.
        type: object
      ObjectInstancePair:
        properties:
          objDefInstanceId:
            description: The object instance identifier of the Definition object.
            format: int64
            type: integer
          objIdentityInstanceId:
            description: The object instance identifier of the Identity object.
            format: int64
            type: integer
        type: object
      ParameterExpression:
        properties:
          operator:
            $ref: '#/components/schemas/com/archive/ExpressionOperator'
            description: The expression operator.
          parameterId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: Holds the object instance identifier of the ParameterIdentity object
              to be used in the expression.
          useConverted:
            description: If set to TRUE the converted value field of the parameter value should
              be used, otherwise the raw value field should be used.
            type: boolean
          value:
            description: The value to be used in the expression.
            type: string
        type: object
    com:
      archive:
        ExpressionOperator:
          description: The ExpressionOperator enumeration holds a set of possible expression
            operators.
          enum:
          - EQUAL
          - DIFFER
          - GREATER
          - GREATER_OR_EQUAL
          - LESS
          - LESS_OR_EQUAL
          - CONTAINS
          - ICONTAINS
          type: string
      ObjectKey:
        properties:
          domain:
            description: The domain of the object instance.
            items:
              type: string
            type: array
          instId:
            description: The unique identifier of the object instance. Must not be '0' for
              values as this is the wildcard.
            format: int64
            type: integer
        type: object
  messages:
    Parameter_addParameter_Send:
      description: Parameter addParameter request submission
      payload:
        $ref: '#/components/schemas/Parameter_addParameter_Send'
    Parameter_addParameter_Receive:
      description: Parameter addParameter update response
      payload:
        $ref: '#/components/schemas/Parameter_addParameter_Receive'
    Parameter_addParameter_Error:
      description: Parameter addParameter error response
      payload:
        $ref: '#/components/schemas/Parameter_addParameter_Error'
