asyncapi: 3.0.0
info:
  title: Check Service API
  version: 1.0.0
  description: This API allows clients to interact with the Check Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the Check Service.
    variables:
      port:
        default: '8883'
channels:
  getCurrentTransitionList_progress:
    address: getCurrentTransitionList_progress
    messages:
      getCurrentTransitionList_progress.message:
        $ref: '#/components/messages/getCurrentTransitionList_progress'
    description: >
      Send a **getCurrentTransitionList_progress** message in this channel to receive a
      **getCurrentTransitionList_update** message over the **getCurrentTransitionList_update** channel.
  getCurrentTransitionList_update:
    address: null
    messages:
      getCurrentTransitionList_update.message:
        $ref: '#/components/messages/getCurrentTransitionList_update'
    description: >
      Use this channel to receive getCurrentTransitionList responses as **getCurrentTransitionList_update**
      messages.
  getCurrentTransitionList_response:
    address: getCurrentTransitionList_response
    messages:
      getCurrentTransitionList_response.message:
        $ref: '#/components/messages/getCurrentTransitionList_response'
    description: >
      Use this channel to receive additional getCurrentTransitionList responses as **getCurrentTransitionList_response**
      messages.
  getCurrentTransitionList_error:
    address: getCurrentTransitionList_error
    messages:
      getCurrentTransitionList_error.message:
        $ref: '#/components/messages/getCurrentTransitionList_error'
    description: >
      Use this channel to receive getCurrentTransitionList errors as **getCurrentTransitionList_error**
      messages.
  getSummaryReport_progress:
    address: getSummaryReport_progress
    messages:
      getSummaryReport_progress.message:
        $ref: '#/components/messages/getSummaryReport_progress'
    description: >
      Send a **getSummaryReport_progress** message in this channel to receive a
      **getSummaryReport_update** message over the **getSummaryReport_update** channel.
  getSummaryReport_update:
    address: null
    messages:
      getSummaryReport_update.message:
        $ref: '#/components/messages/getSummaryReport_update'
    description: >
      Use this channel to receive getSummaryReport responses as **getSummaryReport_update**
      messages.
  getSummaryReport_response:
    address: getSummaryReport_response
    messages:
      getSummaryReport_response.message:
        $ref: '#/components/messages/getSummaryReport_response'
    description: >
      Use this channel to receive additional getSummaryReport responses as **getSummaryReport_response**
      messages.
  getSummaryReport_error:
    address: getSummaryReport_error
    messages:
      getSummaryReport_error.message:
        $ref: '#/components/messages/getSummaryReport_error'
    description: >
      Use this channel to receive getSummaryReport errors as **getSummaryReport_error**
      messages.
  enableService_submit:
    address: enableService_submit
    messages:
      enableService_submit.message:
        $ref: '#/components/messages/enableService_submit'
    description: >
      Send a **enableService_submit** message in this channel.
  getServiceStatus_request:
    address: getServiceStatus_request
    messages:
      getServiceStatus_request.message:
        $ref: '#/components/messages/getServiceStatus_request'
    description: >
      Send a **getServiceStatus_request** message in this channel to receive a
      **getServiceStatus_response** message over the **getServiceStatus_response** channel.
  getServiceStatus_response:
    address: null
    messages:
      getServiceStatus_response.message:
        $ref: '#/components/messages/getServiceStatus_response'
    description: >
      Use this channel to receive getServiceStatus responses as **getServiceStatus_response**
      messages.
  enableCheck_submit:
    address: enableCheck_submit
    messages:
      enableCheck_submit.message:
        $ref: '#/components/messages/enableCheck_submit'
    description: >
      Send a **enableCheck_submit** message in this channel.
  enableCheck_error:
    address: enableCheck_error
    messages:
      enableCheck_error.message:
        $ref: '#/components/messages/enableCheck_error'
    description: >
      Use this channel to receive enableCheck errors as **enableCheck_error**
      messages.
  triggerCheck_submit:
    address: triggerCheck_submit
    messages:
      triggerCheck_submit.message:
        $ref: '#/components/messages/triggerCheck_submit'
    description: >
      Send a **triggerCheck_submit** message in this channel.
  triggerCheck_error:
    address: triggerCheck_error
    messages:
      triggerCheck_error.message:
        $ref: '#/components/messages/triggerCheck_error'
    description: >
      Use this channel to receive triggerCheck errors as **triggerCheck_error**
      messages.
  listDefinition_request:
    address: listDefinition_request
    messages:
      listDefinition_request.message:
        $ref: '#/components/messages/listDefinition_request'
    description: >
      Send a **listDefinition_request** message in this channel to receive a
      **listDefinition_response** message over the **listDefinition_response** channel.
  listDefinition_response:
    address: null
    messages:
      listDefinition_response.message:
        $ref: '#/components/messages/listDefinition_response'
    description: >
      Use this channel to receive listDefinition responses as **listDefinition_response**
      messages.
  listDefinition_error:
    address: listDefinition_error
    messages:
      listDefinition_error.message:
        $ref: '#/components/messages/listDefinition_error'
    description: >
      Use this channel to receive listDefinition errors as **listDefinition_error**
      messages.
  listCheckLinks_request:
    address: listCheckLinks_request
    messages:
      listCheckLinks_request.message:
        $ref: '#/components/messages/listCheckLinks_request'
    description: >
      Send a **listCheckLinks_request** message in this channel to receive a
      **listCheckLinks_response** message over the **listCheckLinks_response** channel.
  listCheckLinks_response:
    address: null
    messages:
      listCheckLinks_response.message:
        $ref: '#/components/messages/listCheckLinks_response'
    description: >
      Use this channel to receive listCheckLinks responses as **listCheckLinks_response**
      messages.
  listCheckLinks_error:
    address: listCheckLinks_error
    messages:
      listCheckLinks_error.message:
        $ref: '#/components/messages/listCheckLinks_error'
    description: >
      Use this channel to receive listCheckLinks errors as **listCheckLinks_error**
      messages.
  addCheck_request:
    address: addCheck_request
    messages:
      addCheck_request.message:
        $ref: '#/components/messages/addCheck_request'
    description: >
      Send a **addCheck_request** message in this channel to receive a
      **addCheck_response** message over the **addCheck_response** channel.
  addCheck_response:
    address: null
    messages:
      addCheck_response.message:
        $ref: '#/components/messages/addCheck_response'
    description: >
      Use this channel to receive addCheck responses as **addCheck_response**
      messages.
  addCheck_error:
    address: addCheck_error
    messages:
      addCheck_error.message:
        $ref: '#/components/messages/addCheck_error'
    description: >
      Use this channel to receive addCheck errors as **addCheck_error**
      messages.
  updateDefinition_request:
    address: updateDefinition_request
    messages:
      updateDefinition_request.message:
        $ref: '#/components/messages/updateDefinition_request'
    description: >
      Send a **updateDefinition_request** message in this channel to receive a
      **updateDefinition_response** message over the **updateDefinition_response** channel.
  updateDefinition_response:
    address: null
    messages:
      updateDefinition_response.message:
        $ref: '#/components/messages/updateDefinition_response'
    description: >
      Use this channel to receive updateDefinition responses as **updateDefinition_response**
      messages.
  updateDefinition_error:
    address: updateDefinition_error
    messages:
      updateDefinition_error.message:
        $ref: '#/components/messages/updateDefinition_error'
    description: >
      Use this channel to receive updateDefinition errors as **updateDefinition_error**
      messages.
  removeCheck_submit:
    address: removeCheck_submit
    messages:
      removeCheck_submit.message:
        $ref: '#/components/messages/removeCheck_submit'
    description: >
      Send a **removeCheck_submit** message in this channel.
  removeCheck_error:
    address: removeCheck_error
    messages:
      removeCheck_error.message:
        $ref: '#/components/messages/removeCheck_error'
    description: >
      Use this channel to receive removeCheck errors as **removeCheck_error**
      messages.
  addParameterCheck_request:
    address: addParameterCheck_request
    messages:
      addParameterCheck_request.message:
        $ref: '#/components/messages/addParameterCheck_request'
    description: >
      Send a **addParameterCheck_request** message in this channel to receive a
      **addParameterCheck_response** message over the **addParameterCheck_response** channel.
  addParameterCheck_response:
    address: null
    messages:
      addParameterCheck_response.message:
        $ref: '#/components/messages/addParameterCheck_response'
    description: >
      Use this channel to receive addParameterCheck responses as **addParameterCheck_response**
      messages.
  addParameterCheck_error:
    address: addParameterCheck_error
    messages:
      addParameterCheck_error.message:
        $ref: '#/components/messages/addParameterCheck_error'
    description: >
      Use this channel to receive addParameterCheck errors as **addParameterCheck_error**
      messages.
  removeParameterCheck_submit:
    address: removeParameterCheck_submit
    messages:
      removeParameterCheck_submit.message:
        $ref: '#/components/messages/removeParameterCheck_submit'
    description: >
      Send a **removeParameterCheck_submit** message in this channel.
  removeParameterCheck_error:
    address: removeParameterCheck_error
    messages:
      removeParameterCheck_error.message:
        $ref: '#/components/messages/removeParameterCheck_error'
    description: >
      Use this channel to receive removeParameterCheck errors as **removeParameterCheck_error**
      messages.
operations:
  getCurrentTransitionList_progress:
    action: send
    channel:
      $ref: '#/channels/getCurrentTransitionList_progress'
    messages:
      - $ref: '#/channels/getCurrentTransitionList_progress/messages/getCurrentTransitionList_progress.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/getCurrentTransitionList_update'
  getCurrentTransitionList_update:
    action: receive
    channel:
      $ref: '#/channels/getCurrentTransitionList_update'
    messages:
      - $ref: '#/channels/getCurrentTransitionList_update/messages/getCurrentTransitionList_update.message'
  getCurrentTransitionList_response:
    action: receive
    channel:
      $ref: '#/channels/getCurrentTransitionList_response'
    messages:
      - $ref: '#/channels/getCurrentTransitionList_response/messages/getCurrentTransitionList_response.message'
  getCurrentTransitionList_error:
    action: receive
    channel:
      $ref: '#/channels/getCurrentTransitionList_error'
    messages:
      - $ref: '#/channels/getCurrentTransitionList_error/messages/getCurrentTransitionList_error.message'
  getSummaryReport_progress:
    action: send
    channel:
      $ref: '#/channels/getSummaryReport_progress'
    messages:
      - $ref: '#/channels/getSummaryReport_progress/messages/getSummaryReport_progress.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/getSummaryReport_update'
  getSummaryReport_update:
    action: receive
    channel:
      $ref: '#/channels/getSummaryReport_update'
    messages:
      - $ref: '#/channels/getSummaryReport_update/messages/getSummaryReport_update.message'
  getSummaryReport_response:
    action: receive
    channel:
      $ref: '#/channels/getSummaryReport_response'
    messages:
      - $ref: '#/channels/getSummaryReport_response/messages/getSummaryReport_response.message'
  getSummaryReport_error:
    action: receive
    channel:
      $ref: '#/channels/getSummaryReport_error'
    messages:
      - $ref: '#/channels/getSummaryReport_error/messages/getSummaryReport_error.message'
  enableService_submit:
    action: send
    channel:
      $ref: '#/channels/enableService_submit'
    messages:
      - $ref: '#/channels/enableService_submit/messages/enableService_submit.message'
  getServiceStatus_request:
    action: send
    channel:
      $ref: '#/channels/getServiceStatus_request'
    messages:
      - $ref: '#/channels/getServiceStatus_request/messages/getServiceStatus_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/getServiceStatus_response'
  getServiceStatus_response:
    action: receive
    channel:
      $ref: '#/channels/getServiceStatus_response'
    messages:
      - $ref: '#/channels/getServiceStatus_response/messages/getServiceStatus_response.message'
  enableCheck_submit:
    action: send
    channel:
      $ref: '#/channels/enableCheck_submit'
    messages:
      - $ref: '#/channels/enableCheck_submit/messages/enableCheck_submit.message'
  enableCheck_error:
    action: receive
    channel:
      $ref: '#/channels/enableCheck_error'
    messages:
      - $ref: '#/channels/enableCheck_error/messages/enableCheck_error.message'
  triggerCheck_submit:
    action: send
    channel:
      $ref: '#/channels/triggerCheck_submit'
    messages:
      - $ref: '#/channels/triggerCheck_submit/messages/triggerCheck_submit.message'
  triggerCheck_error:
    action: receive
    channel:
      $ref: '#/channels/triggerCheck_error'
    messages:
      - $ref: '#/channels/triggerCheck_error/messages/triggerCheck_error.message'
  listDefinition_request:
    action: send
    channel:
      $ref: '#/channels/listDefinition_request'
    messages:
      - $ref: '#/channels/listDefinition_request/messages/listDefinition_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/listDefinition_response'
  listDefinition_response:
    action: receive
    channel:
      $ref: '#/channels/listDefinition_response'
    messages:
      - $ref: '#/channels/listDefinition_response/messages/listDefinition_response.message'
  listDefinition_error:
    action: receive
    channel:
      $ref: '#/channels/listDefinition_error'
    messages:
      - $ref: '#/channels/listDefinition_error/messages/listDefinition_error.message'
  listCheckLinks_request:
    action: send
    channel:
      $ref: '#/channels/listCheckLinks_request'
    messages:
      - $ref: '#/channels/listCheckLinks_request/messages/listCheckLinks_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/listCheckLinks_response'
  listCheckLinks_response:
    action: receive
    channel:
      $ref: '#/channels/listCheckLinks_response'
    messages:
      - $ref: '#/channels/listCheckLinks_response/messages/listCheckLinks_response.message'
  listCheckLinks_error:
    action: receive
    channel:
      $ref: '#/channels/listCheckLinks_error'
    messages:
      - $ref: '#/channels/listCheckLinks_error/messages/listCheckLinks_error.message'
  addCheck_request:
    action: send
    channel:
      $ref: '#/channels/addCheck_request'
    messages:
      - $ref: '#/channels/addCheck_request/messages/addCheck_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/addCheck_response'
  addCheck_response:
    action: receive
    channel:
      $ref: '#/channels/addCheck_response'
    messages:
      - $ref: '#/channels/addCheck_response/messages/addCheck_response.message'
  addCheck_error:
    action: receive
    channel:
      $ref: '#/channels/addCheck_error'
    messages:
      - $ref: '#/channels/addCheck_error/messages/addCheck_error.message'
  updateDefinition_request:
    action: send
    channel:
      $ref: '#/channels/updateDefinition_request'
    messages:
      - $ref: '#/channels/updateDefinition_request/messages/updateDefinition_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/updateDefinition_response'
  updateDefinition_response:
    action: receive
    channel:
      $ref: '#/channels/updateDefinition_response'
    messages:
      - $ref: '#/channels/updateDefinition_response/messages/updateDefinition_response.message'
  updateDefinition_error:
    action: receive
    channel:
      $ref: '#/channels/updateDefinition_error'
    messages:
      - $ref: '#/channels/updateDefinition_error/messages/updateDefinition_error.message'
  removeCheck_submit:
    action: send
    channel:
      $ref: '#/channels/removeCheck_submit'
    messages:
      - $ref: '#/channels/removeCheck_submit/messages/removeCheck_submit.message'
  removeCheck_error:
    action: receive
    channel:
      $ref: '#/channels/removeCheck_error'
    messages:
      - $ref: '#/channels/removeCheck_error/messages/removeCheck_error.message'
  addParameterCheck_request:
    action: send
    channel:
      $ref: '#/channels/addParameterCheck_request'
    messages:
      - $ref: '#/channels/addParameterCheck_request/messages/addParameterCheck_request.message'
    reply:
      address:
        description: Reply is sent to topic specified in 'replyTo' property in the message header
        location: $message.header#/replyTo
      channel:
        $ref: '#/channels/addParameterCheck_response'
  addParameterCheck_response:
    action: receive
    channel:
      $ref: '#/channels/addParameterCheck_response'
    messages:
      - $ref: '#/channels/addParameterCheck_response/messages/addParameterCheck_response.message'
  addParameterCheck_error:
    action: receive
    channel:
      $ref: '#/channels/addParameterCheck_error'
    messages:
      - $ref: '#/channels/addParameterCheck_error/messages/addParameterCheck_error.message'
  removeParameterCheck_submit:
    action: send
    channel:
      $ref: '#/channels/removeParameterCheck_submit'
    messages:
      - $ref: '#/channels/removeParameterCheck_submit/messages/removeParameterCheck_submit.message'
  removeParameterCheck_error:
    action: receive
    channel:
      $ref: '#/channels/removeParameterCheck_error'
    messages:
      - $ref: '#/channels/removeParameterCheck_error/messages/removeParameterCheck_error.message'
components:
  schemas:
    getCurrentTransitionList_progress:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        filter:
          $ref: '#/components/schemas/mc/check/CheckResultFilter'
          description: |
            The filter field shall contain a set of object instance identifiers for which the check result is required.
            If the checkFilterViaGroups field is TRUE then the checkFilter field shall contain GroupIdentity object instance identifiers, otherwise the field contains CheckIdentity object instance identifiers.
            The CheckIdentity objects referenced, either directly or indirectly via groups, by the checkFilter field shall be the CheckIdentity objects to match.
            The checkFilter field shall support the wildcard value of '0' and shall match all CheckIdentity objects of the provider.
            The service provider shall check for the wildcard value in the list of object instance identifiers in the checkFilter field first and if found no other checks of supplied CheckIdentity object instance identifiers shall be made.
            If the parameterFilterViaGroups field is TRUE then the parameterFilter field shall contain GroupIdentity object instance identifiers, otherwise the field contains ParameterIdentity object instance identifiers.
            The ParameterIdentity objects referenced, either directly or indirectly via groups, by the parameterFilter field shall be the ParameterIdentity objects to match.
            The parameterFilter field shall support the wildcard value of '0' and shall match all ParameterIdentity objects of the provider.
            The service provider shall check for the wildcard value in the list of object instance identifiers in the parameterFilter field first and if found no other checks of supplied ParameterIdentity object instance identifiers shall be made.
            If a referenced GroupIdentity object is unknown then an UNKNOWN error shall be returned.
            If a requested Group, or the Group objects referenced by that Group, does not contain CheckIdentity objects for the checkFilter or ParameterIdentity for the parameterFilter then an INVALID error shall be returned.
            If a referenced CheckIdentity object, either directly or indirectly via groups, is unknown then an UNKNOWN error shall be returned.
            If a referenced ParameterIdentity object, either directly or indirectly via groups, is unknown then an UNKNOWN error shall be returned.
            The filter field shall also contain a list of CheckState enumerations of which states to filter on.
            The supplied lists shall be AND'd together to form the complete filter.
            If a CheckLink object matches the CheckIdentity filter, and the ParameterIdentity filter, and its state matches any of the supplied CheckState enumerations, then its latest CheckResult value shall be returned.
            To report all checks, the wildcard values may be used in the CheckResultFilter.
    getCurrentTransitionList_update:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        updateSummaries:
          $ref: '#/components/schemas/mc/check/CheckResultSummary'
          description: |
            The returned list shall contain an entry for each matched check returning the object instance identifier and the latest CheckResult for that CheckLink object.
    getCurrentTransitionList_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        responseSummaries:
          $ref: '#/components/schemas/mc/check/CheckResultSummary'
          description: |
            The PROGRESS pattern is used to allow the possibly large list of filtered check results to be split into several updates.
            The size of the lists returned in each update and final response is implementation specific.
    getCurrentTransitionList_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - COM
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - INVALID
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    getSummaryReport_progress:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        objInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The objInstIds field shall hold one or more CheckIdentity object instance identifiers of which a check report is required.
            A wildcard value of '0' shall report on all checks.
            The wildcard value should be checked for first, if found no other checks of supplied object instance identifiers shall be made.
            If a requested check is unknown then an UNKNOWN error shall be returned in the ACKNOWLEDGE message and the operation shall end.
    getSummaryReport_update:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        updateObjInstIds:
          type: integer
          format: int64
          description: |
            The returned updates and final response shall contain an entry for each requested CheckIdentity.
            The first part of the update shall be the CheckIdentity object instance identifier.
            The second part shall be the list of all CheckLink object instance identifiers and CheckResults associated with that CheckIdentity.
        updateSummaries:
          $ref: '#/components/schemas/mc/check/CheckResultSummary'
    getSummaryReport_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        responseObjInstIds:
          type: integer
        responseSummaries:
          $ref: '#/components/schemas/mc/check/CheckResultSummary'
    getSummaryReport_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    enableService_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        enableService:
          type: boolean
          description: |
            If enableService is set to TRUE the service shall be enabled and evaluation and reporting of check will commence.
            If enableService is set to FALSE then all evaluation of checks shall be suspended and no check transitions will be reported.
            If the enableService value matches the current enabled state of the service then no change shall be made and no error reported. Enabling an already enabled service has no effect.
    getServiceStatus_request:
      description: A request message with no payload.
      type: object
      additionalProperties: false
    getServiceStatus_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        serviceEnabled:
          type: boolean
          description: |
            The operation shall return TRUE if the service is currently enabled or FALSE if the service is currently disabled.
    enableCheck_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        isGroupIds:
          type: boolean
          description: |
            If the isGroupIds field is TRUE then the enableInstances field shall contain GroupIdentity object instance identifiers, otherwise the field contains CheckLink object instance identifiers.
            The CheckLink objects referenced, either directly or indirectly via groups, by the enableInstances field shall be the CheckLink objects to match.
            The id of the enableInstances field shall support the wildcard value of '0' and matches all CheckLink objects of the provider.
            The service provider shall check for the wildcard value in the list of object instance identifiers in the enableInstances field first and if found no other checks of supplied object instance identifiers shall be made.
            If the enableInstances field contains a value of TRUE then evaluations of matching CheckLink objects shall be performed, a value of FALSE requests that evaluations will not be performed.
            No error shall be raised if the enableInstances Boolean value supplied is the same as the current checkEnabled field for a CheckLink object i.e. enabling an already enabled check will not result in an error.
            If a requested CheckLink or GroupIdentity object is unknown then an UNKNOWN error shall be returned.
            If a requested Group, or the Group objects referenced by that Group, does not contain CheckLink objects then an INVALID error shall be returned.
            If an error is raised then no modifications shall be made as a result of this operation call.
            The provider shall create and store a new CheckLinkDefinition object in the COM archive if the checkEnabled field is changed.
        enableInstances:
          $ref: '#/components/schemas/com/InstanceBooleanPair'
          description: |
            If the check is being enabled, and the check is defined as being periodic in the check link definition, then the provider shall generate a check result immediately and start the checking interval from that check.
    enableCheck_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
            - INVALID
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    triggerCheck_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        checkObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The checkObjInstIds field shall hold a list of CheckIdentity object instance identifiers to trigger the evaluation of all linked checks.
        linkObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The linkObjInstIds field shall hold a list of CheckLink object instance identifiers to trigger the evaluation of.
            The wildcard value of '0' shall be permitted in either list.
            The wildcard value should be checked for first, if found no other checks of supplied object instance identifiers shall be made.
            If a requested CheckIdentity or CheckLink object is unknown then an UNKNOWN error shall be returned.
            If an error is raised then no evaluations shall be made as a result of this operation call.
            Either list may be empty in which case filtering on that aspect, check identity or specific check link, shall be ignored.
            The two lists shall be combined using 'OR' logic, where a CheckLink is evaluated if the identity of a check is in the first list or if the link is directly listed in the second list.
            Triggering a check shall ignore the nominalTime, nominalCount, violationTime and violationCount fields and requests an immediate evaluation of the checks.
            Triggering a check during a periodic check shall not influence the periodic check (e.g. it does not reset the checkInterval timer, the successive valid samples that passed/violated the check or the maxReportingInterval timer).
    triggerCheck_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    listDefinition_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        names:
          type: array
          items:
            type: string
          description: |
            The names field shall hold a list of CheckIdentity names to retrieve the CheckIdentity and actual check definition object instance identifiers for.
            The request may contain the wildcard value of '*' to return all supported check definitions.
            The wildcard value should be checked for first, if found no other checks of supplied identifiers shall be made.
            If a provided identifier does not include a wildcard and does not match an existing CheckIdentity object then this operation shall fail with an UNKNOWN error.
    listDefinition_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        objInstIds:
          $ref: '#/components/schemas/mc/check/CheckTypedInstance'
          description: |
            The response shall contain a list of matching CheckIdentity and actual check definition object instance identifiers and the actual check definition object type.
            The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.
    listDefinition_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    listCheckLinks_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        checkObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The checkObjInstIds field shall hold a list of CheckIdentity object instance identifiers to retrieve the CheckLink object instance identifiers for.
            The request may contain the wildcard value of '0' to return all supported check links.
            The wildcard value should be checked for first, if found no other checks of supplied identifiers shall be made.
            If a provided identifier does not include a wildcard and does not match an existing CheckIdentity object then this operation shall fail with an UNKNOWN error.
    listCheckLinks_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        chkLinkObjInstIds:
          $ref: '#/components/schemas/mc/check/CheckLinkSummary'
          description: |
            The response shall contain a list of CheckLinkSummary that contain the object instance identifiers of the CheckLink, CheckIdentity, and ParameterIdentity for the matched CheckIdentity objects.
    listCheckLinks_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    addCheck_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        checkNames:
          type: array
          items:
            type: string
          description: |
            The checkNames field shall hold the names of the checks to be added.
            The checkNames field must not contain NULL, the wildcard '*', or empty value (an INVALID error shall be returned in this case).
            The supplied names must be unique among all CheckIdentity objects for the domain of the provider otherwise a DUPLICATE error shall be raised.
        checkDefDetails:
          $ref: '#/components/schemas/mc/check/CheckDefinitionDetails'
          description: |
            The checkDefDetails field shall hold the CheckDefinitionDetails to be added.
            The two lists shall be ordered the same.
            The number of entries in the two lists shall be the same size otherwise an INVALID error shall be raised.
            Only one of nominalTime and nominalCount is permitted to be zero, an INVALID error shall be returned if this is not the case.
            Only one of violationTime and violationCount is permitted to be zero, an INVALID error shall be returned if this is not the case.
            If an error is raised then no new identities and definitions shall be added as a result of this operation call.
            If the supplied name matches an existing, but removed, CheckIdentity then that CheckIdentity shall be reused otherwise a new CheckIdentity shall be created.
            The provider shall create a new actual check definition object and store it, and any new CheckIdentity objects, in the COM archive.
    addCheck_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        newObjInstIds:
          $ref: '#/components/schemas/mc/ObjectInstancePair'
          description: |
            The response shall contain the list of object instance identifiers for the CheckIdentity and new actual definition objects.
            The returned list shall maintain the same order as the submitted definitions.
    addCheck_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - INVALID
            - DUPLICATE
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    updateDefinition_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        checkInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The checkInstIds field shall hold the object instance identifiers of the CheckIdentity objects to be updated.
            If the checkInstIds list contains either NULL or '0' an INVALID error shall be raised.
            The supplied object instance identifiers shall match existing identity objects, an UNKNOWN error shall be raised if this is not the case.
            If the check to be updated is currently being used by a CheckLink object, a REFERENCED error shall be raised.
        checkDefDetails:
          $ref: '#/components/schemas/mc/check/CheckDefinitionDetails'
          description: |
            The checkDefDetails field shall contain the replacement CheckDefinitionDetails.
            The two lists shall be ordered the same.
            The number of entries in the two lists shall be the same size otherwise an INVALID error shall be raised.
            Only one of nominalTime and nominalCount is permitted to be zero, an INVALID error shall be returned if this is not the case.
            Only one of violationTime and violationCount is permitted to be zero, an INVALID error shall be returned if this is not the case.
            If an error is raised then no definitions shall be updated as a result of this operation call.
            The provider shall create new actual check definition objects and store them in the COM archive.
            The new definition object shall be the current definition used for the specific CheckIdentity.
    updateDefinition_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        newObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The response shall contain the list of object instance identifiers for the new check definition objects.
            The returned list shall maintain the same order as the submitted definitions.
    updateDefinition_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
            - COM
            - MC
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
            - INVALID
            - REFERENCED
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    removeCheck_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        objInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The objInstIds field holds the object instance identifiers of the CheckIdentity objects to be removed from the provider.
            The list may contain the wildcard value of '0'.
            The wildcard value should be checked for first, if found no other checks of supplied object instance identifiers shall be made.
            If a provided CheckIdentity instance identifier does not include a wildcard and does not match an existing check then this operation shall fail with an UNKNOWN error.
            If any of the matched CheckIdentity objects are being referenced by a CheckLink object then a REFERENCED error shall be returned.
            Matched CheckIdentity objects shall not be removed from the COM archive only the list of available CheckIdentity objects in the provider.
            If an error is raised then no CheckIdentity objects shall be removed as a result of this operation call.
            If the operation succeeds then the provider shall not allow new CheckLink objects to be created for the matched CheckIdentity anymore, existing CheckLink objects are not affected.
    removeCheck_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MC
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - REFERENCED
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    addParameterCheck_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        linkDetails:
          $ref: '#/components/schemas/mc/check/CheckLinkDetails'
          description: |
            The linkDetails field shall contain the new CheckLink details.
            The linkRefs field shall contain the related and source links of the new CheckLink.
            The related field of the ObjectDetails shall reference the object instance identifier of the CheckIdentity being used by the new CheckLink.
            The source field of the ObjectDetails shall reference the ParameterIdentity that the check is being applied to.
            The two lists must be ordered the same so that the correct ObjectDetails for a specific CheckLink can be determined.
        linkRefs:
          $ref: '#/components/schemas/com/ObjectDetails'
          description: |
            If the requested CheckIdentity and ParameterIdentity do not exist then an UNKNOWN error shall be returned.
            The number of entries in the two lists shall be the same size otherwise an INVALID error shall be raised.
            If an interval that is not supported by the provider is requested then an INVALID error shall be returned.
            If the checkInterval is not '0' and the checkOnChange Value is TRUE, then an INVALID error shall be returned.
            The provider shall create new CheckLink and CheckLinkDefinition objects for each pair and store them in the COM archive.
    addParameterCheck_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        newObjInstIds:
          $ref: '#/components/schemas/mc/ObjectInstancePair'
          description: |
            The response shall contain the list of object instance identifiers for the new CheckLink and CheckLinkDefinition objects.
            The returned list shall maintain the same order as the submitted links.
    addParameterCheck_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - COM
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - INVALID
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    removeParameterCheck_submit:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        objInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The objInstIds field holds the object instance identifiers of the CheckLink objects to be removed from the provider.
            The list may contain the wildcard value of '0'.
            The wildcard value should be checked for first, if found no other checks of supplied object instance identifiers shall be made.
            If a provided CheckLink instance identifier does not include a wildcard and does not match an existing link then this operation shall fail with an UNKNOWN error.
            Matched CheckLink objects shall not be removed from the COM archive only the list of available CheckLink objects in the provider.
            If an error is raised then no CheckLink objects shall be removed as a result of this operation call.
            If the operation succeeds then the provider shall not evaluate those parameter/check definition combinations for the deleted CheckLink objects anymore.
    removeParameterCheck_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    mc:
      ObjectInstancePair:
        properties:
          objDefInstanceId:
            description: The object instance identifier of the Definition object.
            format: int64
            type: integer
          objIdentityInstanceId:
            description: The object instance identifier of the Identity object.
            format: int64
            type: integer
        type: object
      ParameterExpression:
        properties:
          operator:
            $ref: '#/components/schemas/com/archive/ExpressionOperator'
            description: The expression operator.
          parameterId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: Holds the object instance identifier of the ParameterIdentity object
              to be used in the expression.
          useConverted:
            description: If set to TRUE the converted value field of the parameter value should
              be used, otherwise the raw value field should be used.
            type: boolean
          value:
            description: The value to be used in the expression.
            type: string
        type: object
      Severity:
        description: 'The severity enumeration holds the possible values for a severity. The
          numerical value represents the increasing severity, therefore CRITICAL is more severe
          than ALARM. Normally, for checks, only the Warning and Critical ranges are used:
          the colour yellow is associated with Warning, and the colour red is associated with
          Critical.'
        enum:
        - INFORMATIONAL
        - WARNING
        - ALARM
        - SEVERE
        - CRITICAL
        type: string
      check:
        CheckDefinitionDetails:
          properties:
            checkSeverity:
              $ref: '#/components/schemas/mc/Severity'
              description: Indicates the seriousness of the violation based on its possible
                negative consequences.
            description:
              description: The description of the check. May be empty.
              type: string
            maxReportingInterval:
              description: Maximum interval that can elapse between generations of CheckResult
                reports. If this value expires, then a CheckResult is generated with the same
                state for the previous and current state. If set to '0', then no maximum reporting
                interval shall be applied.
              format: uint64
              type: number
            nominalCount:
              description: Number of consecutive valid samples passing the check for the check
                to be OK.
              format: uint32
              type: integer
            nominalTime:
              description: If nominalCount is zero then this is duration that a parameter is
                continuously passing the check for the check to be OK. If nominalCount is not
                zero then this is the period over which samples will be used in the nominalCount
                calculation, i.e. samples further in the past than nominalTime are not considered.
              format: uint64
              type: number
            violationCount:
              description: Number of consecutive valid samples violating the check for the check
                to be in violation.
              format: uint32
              type: integer
            violationTime:
              description: If violationCount is zero then this is duration that a parameter
                is continuously violating the check for the check to be in violation. If violationCount
                not zero then this is the period over which samples will be used in the violationCount
                calculation, i.e. samples further in the past than violationTime are not considered.
              format: uint64
              type: number
          type: object
        CheckLinkDetails:
          properties:
            checkEnabled:
              description: TRUE if the check instance is enabled.
              type: boolean
            checkInterval:
              description: The interval that a check should be applied. Only applicable if checkOnChange
                is FALSE. If '0', then no periodic checking shall be performed, and a check
                will be triggered by another mechanism. Ignored for Compound checks.
              format: uint64
              type: number
            checkOnChange:
              description: If TRUE then any change to state or value of the parameter, or the
                check condition will trigger a check evaluation. Ignored for Compound checks.
              type: boolean
            condition:
              $ref: '#/components/schemas/mc/ParameterExpression'
              description: Should this check be applied, if NULL then always applied.
            useConverted:
              description: If set to TRUE the converted value field of the parameter value should
                be used, otherwise the raw value field should be used. Ignored for Compound
                checks.
              type: boolean
          type: object
        CheckLinkSummary:
          properties:
            checkEnabled:
              description: TRUE if the check instance is enabled.
              type: boolean
            checkId:
              description: The object instance identifier of the CheckIdentity object.
              format: int64
              type: integer
            linkDefinitionId:
              description: Contains the object instance identifier of the CheckLinkDefinition
                object.
              format: int64
              type: integer
            linkId:
              description: The object instance identifier of the CheckLink object.
              format: int64
              type: integer
            parameterId:
              $ref: '#/components/schemas/com/ObjectKey'
              description: The object instance identifier of the ParameterIdentity object for
                the check link. NULL for Compound checks.
          type: object
        CheckResult:
          properties:
            checkedValue:
              description: This is the value of the parameter or for a compound check the number
                of checks in violation at the time of a check state transition, or if it is
                a report due to the CheckDefinitionDetails maxReportingInterval expiring, then
                it is the value or the number when the interval expired.
              type: string
            currentCheckState:
              $ref: '#/components/schemas/mc/check/CheckState'
              description: The current evaluation state of the check
            paramDefInstId:
              description: The object instance identifier of the ParameterDefinition used for
                the check evaluation. NULL if compound check.
              format: int64
              type: integer
            previousCheckState:
              $ref: '#/components/schemas/mc/check/CheckState'
              description: The previous evaluation state of the check. Initially UNCHECKED for
                the first transition of a check. For check evaluations that do not detect a
                check transition, this value will be the same as the currentCheckState.
          type: object
        CheckResultFilter:
          properties:
            checkFilter:
              description: The list of GroupIdentity object instance identifiers if checkFilterViaGroups
                is TRUE otherwise the CheckIdentity object instance identifiers to filter on.
                A value of '0' means match all.
              items:
                type: integer
              type: array
            checkFilterViaGroups:
              description: If TRUE then the checkFilter field contains GroupIdentity object
                instance identifiers that link to CheckIdentity objects otherwise it contains
                CheckIdentity object instance identifiers directly.
              type: boolean
            parameterFilter:
              description: The list of GroupIdentity object instance identifiers if parameterFilterViaGroups
                is TRUE otherwise the ParameterIdentity object instance identifiers to filter
                on. A value of '0' means match all.
              items:
                type: integer
              type: array
            parameterFilterViaGroups:
              description: If TRUE then the parameterFilter field contains GroupIdentity object
                instance identifiers that link to ParameterIdentity objects otherwise it contains
                ParameterIdentity object instance identifiers directly.
              type: boolean
            stateFilter:
              description: The list of required check states to filter on. Empty list means
                match all.
              items:
                $ref: '#/components/schemas/mc/check/CheckState'
              type: array
          type: object
        CheckResultSummary:
          properties:
            checkEnabled:
              description: The current enabled state of the check link.
              type: boolean
            evaluationTime:
              description: The timestamp of the check result. If as a result of max reporting
                interval expiring then it shall contain the expiration timestamp.
              format: uint64
              type: number
            linkId:
              description: The object instance identifier of the check link.
              format: int64
              type: integer
            parameterId:
              $ref: '#/components/schemas/com/ObjectKey'
              description: The object instance key of the ParameterIdentity being checked. NULL
                only for Compound checks.
            result:
              $ref: '#/components/schemas/mc/check/CheckResult'
              description: The check result value.
          type: object
        CheckState:
          description: The CheckState enumeration holds the possible basic states of a check.
            The meaning of the NOT_OK value is check specific and detailed in the relevant check
            type definition.
          enum:
          - DISABLED
          - UNCHECKED
          - INVALID
          - OK
          - NOT_OK
          type: string
        CheckTypedInstance:
          properties:
            objDefCheckType:
              $ref: '#/components/schemas/com/ObjectType'
              description: The COM object type of the check body.
            objInstIds:
              $ref: '#/components/schemas/mc/ObjectInstancePair'
              description: The object instance identifiers.
          type: object
    com:
      archive:
        ExpressionOperator:
          description: The ExpressionOperator enumeration holds a set of possible expression
            operators.
          enum:
          - EQUAL
          - DIFFER
          - GREATER
          - GREATER_OR_EQUAL
          - LESS
          - LESS_OR_EQUAL
          - CONTAINS
          - ICONTAINS
          type: string
      InstanceBooleanPair:
        properties:
          id:
            description: The object instance identifier.
            format: int64
            type: integer
          value:
            description: An associated Boolean value.
            type: boolean
        type: object
      ObjectDetails:
        properties:
          related:
            description: Contains the object instance identifier of a related object (e.g.
              the ActionDefinition that an Action uses). This is service specific. The ObjectType
              of the related object is specified in the service specification. The related
              object must exist in the same domain as this object.
            format: int64
            type: integer
          source:
            $ref: '#/components/schemas/com/ObjectId'
            description: An object which is at the origin of the object creation (e.g. the
              procedure from which an action was triggered).
        type: object
      ObjectId:
        properties:
          key:
            $ref: '#/components/schemas/com/ObjectKey'
            description: The combination of the object domain and object instance identifier.
          type_:
            $ref: '#/components/schemas/com/ObjectType'
            description: The fully qualified unique identifier of the type.
        type: object
      ObjectKey:
        properties:
          domain:
            description: The domain of the object instance.
            items:
              type: string
            type: array
          instId:
            description: The unique identifier of the object instance. Must not be '0' for
              values as this is the wildcard.
            format: int64
            type: integer
        type: object
      ObjectType:
        properties:
          area:
            description: Area Number where the object type is defined. Must not be '0' for
              values as this is the wildcard.
            format: uint16
            type: integer
          number:
            description: The service specific object number. Must not be '0' for values as
              this is the wildcard.
            format: uint16
            type: integer
          service:
            description: Service Number of the service where the object type is defined. Must
              not be '0' for values as this is the wildcard.
            format: uint16
            type: integer
          version:
            description: Area Version of the service where the object type is defined. Must
              not be '0' for values as this is the wildcard.
            format: uint8
            type: integer
        type: object
  messages:
    getCurrentTransitionList_progress:
      description: getCurrentTransitionList request
      payload:
        $ref: '#/components/schemas/getCurrentTransitionList_progress'
    getCurrentTransitionList_update:
      description: getCurrentTransitionList response
      payload:
        $ref: '#/components/schemas/getCurrentTransitionList_update'
    getCurrentTransitionList_response:
      description: getCurrentTransitionList update response
      payload:
        $ref: '#/components/schemas/getCurrentTransitionList_response'
    getCurrentTransitionList_error:
      description: getCurrentTransitionList error response
      payload:
        $ref: '#/components/schemas/getCurrentTransitionList_error'
    getSummaryReport_progress:
      description: getSummaryReport request
      payload:
        $ref: '#/components/schemas/getSummaryReport_progress'
    getSummaryReport_update:
      description: getSummaryReport response
      payload:
        $ref: '#/components/schemas/getSummaryReport_update'
    getSummaryReport_response:
      description: getSummaryReport update response
      payload:
        $ref: '#/components/schemas/getSummaryReport_response'
    getSummaryReport_error:
      description: getSummaryReport error response
      payload:
        $ref: '#/components/schemas/getSummaryReport_error'
    enableService_submit:
      description: enableService request
      payload:
        $ref: '#/components/schemas/enableService_submit'
    getServiceStatus_request:
      description: getServiceStatus request
      payload:
        $ref: '#/components/schemas/getServiceStatus_request'
    getServiceStatus_response:
      description: getServiceStatus response
      payload:
        $ref: '#/components/schemas/getServiceStatus_response'
    enableCheck_submit:
      description: enableCheck request
      payload:
        $ref: '#/components/schemas/enableCheck_submit'
    enableCheck_error:
      description: enableCheck error response
      payload:
        $ref: '#/components/schemas/enableCheck_error'
    triggerCheck_submit:
      description: triggerCheck request
      payload:
        $ref: '#/components/schemas/triggerCheck_submit'
    triggerCheck_error:
      description: triggerCheck error response
      payload:
        $ref: '#/components/schemas/triggerCheck_error'
    listDefinition_request:
      description: listDefinition request
      payload:
        $ref: '#/components/schemas/listDefinition_request'
    listDefinition_response:
      description: listDefinition response
      payload:
        $ref: '#/components/schemas/listDefinition_response'
    listDefinition_error:
      description: listDefinition error response
      payload:
        $ref: '#/components/schemas/listDefinition_error'
    listCheckLinks_request:
      description: listCheckLinks request
      payload:
        $ref: '#/components/schemas/listCheckLinks_request'
    listCheckLinks_response:
      description: listCheckLinks response
      payload:
        $ref: '#/components/schemas/listCheckLinks_response'
    listCheckLinks_error:
      description: listCheckLinks error response
      payload:
        $ref: '#/components/schemas/listCheckLinks_error'
    addCheck_request:
      description: addCheck request
      payload:
        $ref: '#/components/schemas/addCheck_request'
    addCheck_response:
      description: addCheck response
      payload:
        $ref: '#/components/schemas/addCheck_response'
    addCheck_error:
      description: addCheck error response
      payload:
        $ref: '#/components/schemas/addCheck_error'
    updateDefinition_request:
      description: updateDefinition request
      payload:
        $ref: '#/components/schemas/updateDefinition_request'
    updateDefinition_response:
      description: updateDefinition response
      payload:
        $ref: '#/components/schemas/updateDefinition_response'
    updateDefinition_error:
      description: updateDefinition error response
      payload:
        $ref: '#/components/schemas/updateDefinition_error'
    removeCheck_submit:
      description: removeCheck request
      payload:
        $ref: '#/components/schemas/removeCheck_submit'
    removeCheck_error:
      description: removeCheck error response
      payload:
        $ref: '#/components/schemas/removeCheck_error'
    addParameterCheck_request:
      description: addParameterCheck request
      payload:
        $ref: '#/components/schemas/addParameterCheck_request'
    addParameterCheck_response:
      description: addParameterCheck response
      payload:
        $ref: '#/components/schemas/addParameterCheck_response'
    addParameterCheck_error:
      description: addParameterCheck error response
      payload:
        $ref: '#/components/schemas/addParameterCheck_error'
    removeParameterCheck_submit:
      description: removeParameterCheck request
      payload:
        $ref: '#/components/schemas/removeParameterCheck_submit'
    removeParameterCheck_error:
      description: removeParameterCheck error response
      payload:
        $ref: '#/components/schemas/removeParameterCheck_error'
