asyncapi: 3.0.0
info:
  title: Parameter Service monitorValue API
  version: 1.0.0
  description: This API allows clients to interact with the monitorValue interaction of the Parameter Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the Parameter Service's monitorValue interaction.
    variables:
      port:
        default: '8883'
channels:
  subscriptionKeys_Parameter_monitorValue:
    address: subscriptionKeys_Parameter_monitorValue
    messages:
      Parameter.monitorValue_subscriptionKeys.message:
        $ref: '#/components/messages/Parameter_monitorValue_subscriptionKeys'
    description: >
      Send a **Parameter_monitorValue_subscriptionKeys** message in this channel to receive a
      **Parameter_monitorValue_publishNotify** message over the **publishNotify_Parameter_monitorValue** channel.
  publishNotify_Parameter_monitorValue:
    address: publishNotify_Parameter_monitorValue
    messages:
      Parameter.monitorValue_publishNotify.message:
        $ref: '#/components/messages/Parameter_monitorValue_publishNotify'
    description: >
      Use this channel to receive Parameter monitorValue responses as **Parameter_monitorValue_publishNotify**
      messages.
operations:
  Parameter_monitorValue_subscriptionKeys:
    action: send
    channel:
      $ref: '#/channels/subscriptionKeys_Parameter_monitorValue'
    messages:
      - $ref: '#/channels/subscriptionKeys_Parameter_monitorValue/messages/Parameter.monitorValue_subscriptionKeys.message'
  Parameter_monitorValue_publishNotify:
    action: receive
    channel:
      $ref: '#/channels/publishNotify_Parameter_monitorValue'
    messages:
      - $ref: '#/channels/publishNotify_Parameter_monitorValue/messages/Parameter.monitorValue_publishNotify.message'
components:
  schemas:
    Parameter_monitorValue_subscriptionKeys:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        name:
          type: string
          description: |
            The parameter name.
        parameterDefinitionId:
          type: integer
          format: int64
          description: |
            The parameter identity.
        parameterValueInstance:
          type: integer
          format: int64
          description: |
            The parameter value instance.
    Parameter_monitorValue_publishNotify:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        objId:
          $ref: '#/components/schemas/com/ObjectId'
          description: |
            The MAL EntityKey.firstSubKey shall contain the parameter name.
            The MAL EntityKey.secondSubKey shall contain the ParameterIdentity object instance identifier.
            The MAL EntityKey.thirdSubKey shall contain the ParameterDefinition object instance identifier.
            The MAL EntityKey.fourthSubKey shall contain the new ParameterValueInstance object instance identifier.
            The timestamp of the ParameterValueInstance report shall be taken from the publish message and shall be the time of the parameter value update.
            The publish message shall include the ObjectId of the source link of the report.
            If no source link is needed then the ObjectId shall be replaced with a NULL.
        newValue:
          $ref: '#/components/schemas/mc/parameter/ParameterValue'
          description: |
            The second part of the publish message shall be the ParameterValueInstance object value.
    com:
      ObjectId:
        properties:
          key:
            $ref: '#/components/schemas/com/ObjectKey'
            description: The combination of the object domain and object instance identifier.
          type_:
            $ref: '#/components/schemas/com/ObjectType'
            description: The fully qualified unique identifier of the type.
        type: object
      ObjectKey:
        properties:
          domain:
            description: The domain of the object instance.
            items:
              type: string
            type: array
          instId:
            description: The unique identifier of the object instance. Must not be '0' for
              values as this is the wildcard.
            format: int64
            type: integer
        type: object
      ObjectType:
        properties:
          area:
            description: Area Number where the object type is defined. Must not be '0' for
              values as this is the wildcard.
            format: uint16
            type: integer
          number:
            description: The service specific object number. Must not be '0' for values as
              this is the wildcard.
            format: uint16
            type: integer
          service:
            description: Service Number of the service where the object type is defined. Must
              not be '0' for values as this is the wildcard.
            format: uint16
            type: integer
          version:
            description: Area Version of the service where the object type is defined. Must
              not be '0' for values as this is the wildcard.
            format: uint8
            type: integer
        type: object
    mc:
      parameter:
        ParameterValue:
          properties:
            convertedValue:
              description: The parameter converted value.
              type: string
            rawValue:
              description: The parameter raw value. The value of NULL is a valid value and carries
                no special significance in the parameter service.
              type: string
            validityState:
              description: Holds the validity state for a parameter value. If the parameter
                is valid then this should be set to '0'.
              format: uint8
              type: integer
          type: object
  messages:
    Parameter_monitorValue_subscriptionKeys:
      description: Parameter monitorValue request submission
      payload:
        $ref: '#/components/schemas/Parameter_monitorValue_subscriptionKeys'
    Parameter_monitorValue_publishNotify:
      description: Parameter monitorValue update response
      payload:
        $ref: '#/components/schemas/Parameter_monitorValue_publishNotify'
