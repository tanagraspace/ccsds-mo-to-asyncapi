asyncapi: 3.0.0
info:
  title: Action Service addAction API
  version: 1.0.0
  description: This API allows clients to interact with the addAction iteraction of the Action Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the addAction interaction.
    variables:
      port:
        enum:
          - '8883'
          - '8884'
        default: '8883'
    bindings:
      mqtt:
        clientId: guest
        cleanSession: false
        keepAlive: 0
        lastWill:
          topic: /will
          qos: 0
          message: Guest gone offline.
          retain: false
channels:
  Send_Action_addAction:
    address: Send_Action_addAction
    messages:
      Action.addAction_Send.message:
        $ref: '#/components/messages/Action_addAction_Send'
    description: >
      Send a **Action_addAction_Send** message in this channel to receive a
      **Action_addAction_Receive** message over the **Receive_Action_addAction** channel.
  Receive_Action_addAction:
    address: Receive_Action_addAction
    messages:
      Action.addAction_Receive.message:
        $ref: '#/components/messages/Action_addAction_Receive'
    description: >
      Use this channel to receive Action addAction responses as **Action_addAction_Receive**
      messages.
  Error_Action_addAction:
    address: Error_Action_addAction
    messages:
      Action.addAction_Error.message:
        $ref: '#/components/messages/Action_addAction_Error'
    description: >
      Use this channel to receive Action addAction errors as **Action_addAction_ReceiveErrors**
      messages.
operations:
  Action_addAction_Send:
    action: send
    channel:
      $ref: '#/channels/Send_Action_addAction'
    messages:
      - $ref: '#/channels/Send_Action_addAction/messages/Action.addAction_Send.message'
  Action_addAction_Receive:
    action: receive
    channel:
      $ref: '#/channels/Receive_Action_addAction'
    messages:
      - $ref: '#/channels/Receive_Action_addAction/messages/Action.addAction_Receive.message'
  Action_addAction_Error:
    action: receive
    channel:
      $ref: '#/channels/Error_Action_addAction'
    messages:
      - $ref: '#/channels/Error_Action_addAction/messages/Action.addAction_Error.message'
components:
  schemas:
    Action_addAction_Send:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        actionDefDetails:
          $ref: '#/components/schemas/mc/action/ActionCreationRequest'
          description: |
            The actionDefDetails field shall hold the name and definitions to be added.
            The name field must not be the wildcard '*', or empty (an INVALID error shall be returned in this case).
            The supplied name must be unique among all ActionIdentity objects for the domain of the provider otherwise a DUPLICATE error shall be raised.
            If an error is raised then no new identities and definitions shall be added as a result of this operation call.
            If the supplied name matches an existing, but removed, ActionIdentity then that ActionIdentity shall be reused otherwise a new ActionIdentity shall be created.
            The provider shall create a new ActionDefinition object and store it, and any new ActionIdentity objects, in the COM archive.
    Action_addAction_Receive:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        newObjInstIds:
          $ref: '#/components/schemas/mc/ObjectInstancePair'
          description: |
            The response shall contain the list of object instance identifiers for the ActionIdentity and new ActionDefinition objects.
            The returned list shall maintain the same order as the submitted definitions.
    Action_addAction_Error:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - DUPLICATE
            - INVALID
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    mc:
      action:
        ActionCreationRequest:
          properties:
            actionDefDetails:
              $ref: '#/components/schemas/mc/action/ActionDefinitionDetails'
              description: The action definition details.
            name:
              description: The name of the action. Must not be empty or the wildcard value.
              type: string
          type: object
        ActionDefinitionDetails:
          properties:
            arguments:
              description: The list of argument definitions. If no arguments are defined, then
                the complete list is replaced with a NULL.
              items:
                $ref: '#/components/schemas/mc/ArgumentDefinitionDetails'
              type: array
            category:
              description: Category of the action. Value taken from ActionCategory enumeration,
                although the use of a UOctet allows deployment specific extension. Extensions
                must use values greater than 127.
              format: uint8
              type: integer
            description:
              description: The description of the action.
              type: string
            progressStepCount:
              description: Total number of steps that will be reported if PROGRESS reporting
                is selected in the sent Action. 0 if PROGRESS reporting is not used.
              format: uint16
              type: integer
          type: object
      ArgumentDefinitionDetails:
        properties:
          argId:
            description: Holds the argument definition identifier.
            type: string
          conditionalConversions:
            description: The conditional conversions to apply to the argument. Only the first
              TRUE conversion should be applied.
            items:
              $ref: '#/components/schemas/mc/ConditionalConversion'
            type: array
          convertedType:
            description: Holds the attribute short form part of the converted type of the
              argument, e.g., for a MAL::String argument it shall hold 15. Must not be NULL
              if a conversion condition is supplied.
            format: int8
            type: integer
          convertedUnit:
            description: The converted argument units.
            type: string
          description:
            description: Optional argument description.
            type: string
          rawType:
            description: Holds the attribute short form part of the raw type of the argument,
              e.g., for a MAL::String argument it shall hold 15.
            format: int8
            type: integer
          rawUnit:
            description: The unit for the raw value.
            type: string
        type: object
      ConditionalConversion:
        properties:
          condition:
            $ref: '#/components/schemas/mc/ParameterExpression'
            description: The expression indicates which entities are applicable for this check.
              If NULL, then the condition shall evaluate to TRUE.
          conversionId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: The object instance identifier of the ConversionIdentity object to
              be used if the condition evaluates to TRUE or is NULL.
        type: object
      ObjectInstancePair:
        properties:
          objDefInstanceId:
            description: The object instance identifier of the Definition object.
            format: int64
            type: integer
          objIdentityInstanceId:
            description: The object instance identifier of the Identity object.
            format: int64
            type: integer
        type: object
      ParameterExpression:
        properties:
          operator:
            $ref: '#/components/schemas/com/archive/ExpressionOperator'
            description: The expression operator.
          parameterId:
            $ref: '#/components/schemas/com/ObjectKey'
            description: Holds the object instance identifier of the ParameterIdentity object
              to be used in the expression.
          useConverted:
            description: If set to TRUE the converted value field of the parameter value should
              be used, otherwise the raw value field should be used.
            type: boolean
          value:
            description: The value to be used in the expression.
            type: string
        type: object
    com:
      ObjectKey:
        properties:
          domain:
            description: The domain of the object instance.
            items:
              type: string
            type: array
          instId:
            description: The unique identifier of the object instance. Must not be '0' for
              values as this is the wildcard.
            format: int64
            type: integer
        type: object
      archive:
        ExpressionOperator:
          description: The ExpressionOperator enumeration holds a set of possible expression
            operators.
          enum:
          - EQUAL
          - DIFFER
          - GREATER
          - GREATER_OR_EQUAL
          - LESS
          - LESS_OR_EQUAL
          - CONTAINS
          - ICONTAINS
          type: string
  messages:
    Action_addAction_Send:
      description: Action addAction request submission
      payload:
        $ref: '#/components/schemas/Action_addAction_Send'
    Action_addAction_Receive:
      description: Action addAction update response
      payload:
        $ref: '#/components/schemas/Action_addAction_Receive'
    Action_addAction_Error:
      description: Action addAction error response
      payload:
        $ref: '#/components/schemas/Action_addAction_Error'
