asyncapi: 3.0.0
info:
  title: Aggregation Service enableGeneration API
  version: 1.0.0
  description: This API allows clients to interact with the enableGeneration interaction of the Aggregation Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the Aggregation Service's enableGeneration interaction.
    variables:
      port:
        default: '8883'
channels:
  request_Aggregation_enableGeneration:
    address: request_Aggregation_enableGeneration
    messages:
      Aggregation.enableGeneration_request.message:
        $ref: '#/components/messages/Aggregation_enableGeneration_request'
    description: >
      Send a **Aggregation_enableGeneration_request** message in this channel to receive a
      **Aggregation_enableGeneration_response** message over the **response_Aggregation_enableGeneration** channel.
  response_Aggregation_enableGeneration:
    address: response_Aggregation_enableGeneration
    messages:
      Aggregation.enableGeneration_response.message:
        $ref: '#/components/messages/Aggregation_enableGeneration_response'
    description: >
      Use this channel to receive Aggregation enableGeneration responses as **Aggregation_enableGeneration_response**
      messages.
  error_Aggregation_enableGeneration:
    address: error_Aggregation_enableGeneration
    messages:
      Aggregation.enableGeneration_error.message:
        $ref: '#/components/messages/Aggregation_enableGeneration_error'
    description: >
      Use this channel to receive Aggregation enableGeneration errors as **Aggregation_enableGeneration_responseErrors**
      messages.
operations:
  Aggregation_enableGeneration_request:
    action: send
    channel:
      $ref: '#/channels/request_Aggregation_enableGeneration'
    messages:
      - $ref: '#/channels/request_Aggregation_enableGeneration/messages/Aggregation.enableGeneration_request.message'
  Aggregation_enableGeneration_response:
    action: receive
    channel:
      $ref: '#/channels/response_Aggregation_enableGeneration'
    messages:
      - $ref: '#/channels/response_Aggregation_enableGeneration/messages/Aggregation.enableGeneration_response.message'
  Aggregation_enableGeneration_error:
    action: receive
    channel:
      $ref: '#/channels/error_Aggregation_enableGeneration'
    messages:
      - $ref: '#/channels/error_Aggregation_enableGeneration/messages/Aggregation.enableGeneration_error.message'
components:
  schemas:
    Aggregation_enableGeneration_request:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        isGroupIds:
          type: boolean
          description: |
            If the isGroupIds field is TRUE then the enableInstances field shall contain GroupIdentity object instance identifiers, otherwise the field contains AggregationIdentity object instance identifiers.
            The AggregationIdentity objects referenced, either directly or indirectly via groups, by the enableInstances field shall be the AggregationIdentity objects to match.
            The id of the enableInstances field shall support the wildcard value of '0' and matches all AggregationIdentity objects of the provider.
            The service provider shall check for the wildcard value in the list of object instance identifiers in the enableInstances field first and if found no other checks of supplied object instance identifiers shall be made.
            If the enableInstances field contains a value of TRUE then reports of matching AggregationIdentity objects shall be generated, a value of FALSE requests that reports will not be generated.
            No error shall be raised if the enableInstances Boolean value supplied is the same as the current generationEnabled field of the definition for a matched AggregationIdentity object i.e. enabling an already enabled aggregation will not result in an error.
            If a requested AggregationIdentity or GroupIdentity object is unknown then an UNKNOWN error shall be returned.
            If a requested Group, or the Group objects referenced by that Group, does not contain AggregationIdentity objects then an INVALID error shall be returned.
            If an error is raised then no modifications shall be made as a result of this operation call.
            The provider shall create and store a new AggregationDefinition object in the COM archive if the generationEnabled field is changed.
            If a new AggregationDefinition object is created then that new object shall be the current AggregationDefinition used for the specific AggregationIdentity.
        enableInstances:
          $ref: '#/components/schemas/com/InstanceBooleanPair'
          description: |
            If the generation of reports is being enabled, and the aggregation is defined as being periodic, then the provider shall generate a report immediately and start the report interval from that report.
    Aggregation_enableGeneration_response:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        newObjInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The response shall contain the list of object instance identifiers for the new AggregationDefinition objects.
    Aggregation_enableGeneration_error:
      type: object
      properties:
        sequenceId:
          type: string
          description: A unique identifier to map the response (receive message) to the request (send message). If no request message exists then this unique identifier can be used to track the sequence order of the received messages.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
            - INVALID
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    com:
      InstanceBooleanPair:
        properties:
          id:
            description: The object instance identifier.
            format: int64
            type: integer
          value:
            description: An associated Boolean value.
            type: boolean
        type: object
  messages:
    Aggregation_enableGeneration_request:
      description: Aggregation enableGeneration request submission
      payload:
        $ref: '#/components/schemas/Aggregation_enableGeneration_request'
    Aggregation_enableGeneration_response:
      description: Aggregation enableGeneration update response
      payload:
        $ref: '#/components/schemas/Aggregation_enableGeneration_response'
    Aggregation_enableGeneration_error:
      description: Aggregation enableGeneration error response
      payload:
        $ref: '#/components/schemas/Aggregation_enableGeneration_error'
