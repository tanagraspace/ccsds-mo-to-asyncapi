asyncapi: 3.0.0
info:
  title: Action Service preCheckAction API
  version: 1.0.0
  description: This API allows clients to interact with the preCheckAction iteraction of the Action Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the preCheckAction interaction.
    variables:
      port:
        enum:
          - '8883'
          - '8884'
        default: '8883'
    bindings:
      mqtt:
        clientId: guest
        cleanSession: false
        keepAlive: 0
        lastWill:
          topic: /will
          qos: 0
          message: Guest gone offline.
          retain: false
channels:
  Send_Action_preCheckAction:
    address: Send_Action_preCheckAction
    messages:
      Action.preCheckAction_Send.message:
        $ref: '#/components/messages/Action_preCheckAction_Send'
    description: >
      Send a **Action_preCheckAction_Send** message in this channel to receive a
      **Action_preCheckAction_Receive** message over the **Receive_Action_preCheckAction** channel.
  Receive_Action_preCheckAction:
    address: Receive_Action_preCheckAction
    messages:
      Action.preCheckAction_Receive.message:
        $ref: '#/components/messages/Action_preCheckAction_Receive'
    description: >
      Use this channel to receive Action preCheckAction responses as **Action_preCheckAction_Receive**
      messages.
  Error_Action_preCheckAction:
    address: Error_Action_preCheckAction
    messages:
      Action.preCheckAction_Error.message:
        $ref: '#/components/messages/Action_preCheckAction_Error'
    description: >
      Use this channel to receive Action preCheckAction errors as **Action_preCheckAction_ReceiveErrors**
      messages.
operations:
  Action_preCheckAction_Send:
    action: send
    channel:
      $ref: '#/channels/Send_Action_preCheckAction'
    messages:
      - $ref: '#/channels/Send_Action_preCheckAction/messages/Action.preCheckAction_Send.message'
  Action_preCheckAction_Receive:
    action: receive
    channel:
      $ref: '#/channels/Receive_Action_preCheckAction'
    messages:
      - $ref: '#/channels/Receive_Action_preCheckAction/messages/Action.preCheckAction_Receive.message'
  Action_preCheckAction_Error:
    action: receive
    channel:
      $ref: '#/channels/Error_Action_preCheckAction'
    messages:
      - $ref: '#/channels/Error_Action_preCheckAction/messages/Action.preCheckAction_Error.message'
components:
  schemas:
    Action_preCheckAction_Send:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        actionDetails:
          $ref: '#/components/schemas/mc/action/ActionInstanceDetails'
          description: |
            The actionDetails part of the submission shall contain the argument values and related information of the action instance to be executed.
            If the ActionInstanceDetails structure contains an argumentIds field value then this shall be compared to the same field in the matched ActionDefinition object and must be the same size and contain the same values, an INVALID error shall be returned if this is not the case.
            If the supplied argument values do not match the attribute type specified in the action definition then an INVALID error shall be returned.
            A service provider may apply some deployment specific checks to the action instance and can return an INVALID error if they fail.
    Action_preCheckAction_Receive:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        accepted:
          type: boolean
          description: |
            The returned Boolean shall be set to TRUE if the action would be accepted successfully; otherwise the operation shall return FALSE.
    Action_preCheckAction_Error:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
            - COM
        name:
          type: string
          description: A code representing the error.
          enum:
            - INVALID
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the erroneous values from the originating list supplied or request list.
    mc:
      action:
        ActionInstanceDetails:
          properties:
            argumentIds:
              description: Optional list of argument definition identifiers. Allows the provider
                to verify that the correct arguments are being supplied. The ordering of the
                list matches that of the argument list of the action definition.
              items:
                type: string
              type: array
            argumentValues:
              description: List containing the values of the arguments. The ordering of the
                list matches that of the definition. If a value for a particular entry is not
                being supplied, then its position is filled with a NULL value. If no arguments
                are defined, then the complete list is replaced with a NULL.
              items:
                $ref: '#/components/schemas/mc/AttributeValue'
              type: array
            defInstId:
              description: The object instance identifier of the ActionDefinition to be used.
              format: int64
              type: integer
            isRawValue:
              description: Optional list of Booleans that determine whether the supplied argument
                values are raw or converted. If the Boolean for a particular value is TRUE or
                NULL then that value is assumed to be raw. If the complete isRawValue list is
                NULL then all arguments are assumed to be raw values. The ordering of the list
                matches that of the argument list of the action definition.
              items:
                type: boolean
              type: array
            stageCompletedRequired:
              description: If TRUE, then an activity event of type Execution is required for
                the COMPLETION stage.
              type: boolean
            stageProgressRequired:
              description: If TRUE, then activity events of type Execution are required for
                the PROGRESS stages.
              type: boolean
            stageStartedRequired:
              description: If TRUE, then an activity event of type Execution is required for
                the STARTED stage.
              type: boolean
          type: object
      AttributeValue:
        properties:
          value:
            description: The argument value. Must not be NULL. NULL may be represented by
              having a NULL in place of the complete AttributeValue composite.
            type: string
        type: object
  messages:
    Action_preCheckAction_Send:
      description: Action preCheckAction request submission
      payload:
        $ref: '#/components/schemas/Action_preCheckAction_Send'
    Action_preCheckAction_Receive:
      description: Action preCheckAction update response
      payload:
        $ref: '#/components/schemas/Action_preCheckAction_Receive'
    Action_preCheckAction_Error:
      description: Action preCheckAction error response
      payload:
        $ref: '#/components/schemas/Action_preCheckAction_Error'
