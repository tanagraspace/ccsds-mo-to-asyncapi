asyncapi: 3.0.0
info:
  title: Aggregation Service getValue API
  version: 1.0.0
  description: This API allows clients to interact with the getValue iteraction of the Aggregation Service.
defaultContentType: application/json
servers:
  production:
    host: 'localhost:{port}'
    protocol: mqtt
    description: MQTT server for the getValue interaction.
    variables:
      port:
        enum:
          - '8883'
          - '8884'
        default: '8883'
    bindings:
      mqtt:
        clientId: guest
        cleanSession: false
        keepAlive: 0
        lastWill:
          topic: /will
          qos: 0
          message: Guest gone offline.
          retain: false
channels:
  Send_Aggregation_getValue:
    address: Send_Aggregation_getValue
    messages:
      Aggregation.getValue_Send.message:
        $ref: '#/components/messages/Aggregation_getValue_Send'
    description: >
      Send a **Aggregation_getValue_Send** message in this channel to receive a
      **Aggregation_getValue_Receive** message over the **Receive_Aggregation_getValue** channel.
  Receive_Aggregation_getValue:
    address: Receive_Aggregation_getValue
    messages:
      Aggregation.getValue_Receive.message:
        $ref: '#/components/messages/Aggregation_getValue_Receive'
    description: >
      Use this channel to receive Aggregation getValue responses as **Aggregation_getValue_Receive**
      messages.
  Error_Aggregation_getValue:
    address: Error_Aggregation_getValue
    messages:
      Aggregation.getValue_Error.message:
        $ref: '#/components/messages/Aggregation_getValue_Error'
    description: >
      Use this channel to receive Aggregation getValue errors as **Aggregation_getValue_ReceiveErrors**
      messages.
operations:
  Aggregation_getValue_Send:
    action: send
    channel:
      $ref: '#/channels/Send_Aggregation_getValue'
    messages:
      - $ref: '#/channels/Send_Aggregation_getValue/messages/Aggregation.getValue_Send.message'
  Aggregation_getValue_Receive:
    action: receive
    channel:
      $ref: '#/channels/Receive_Aggregation_getValue'
    messages:
      - $ref: '#/channels/Receive_Aggregation_getValue/messages/Aggregation.getValue_Receive.message'
  Aggregation_getValue_Error:
    action: receive
    channel:
      $ref: '#/channels/Error_Aggregation_getValue'
    messages:
      - $ref: '#/channels/Error_Aggregation_getValue/messages/Aggregation.getValue_Error.message'
components:
  schemas:
    Aggregation_getValue_Send:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        aggInstIds:
          type: array
          items:
            type: integer
            format: int64
          description: |
            The aggInstIds field shall provide the list of AggregationIdentity object instance identifiers.
            The wildcard value of '0' shall be supported and matches all aggregations of the provider.
            The wildcard value should be checked for first, if found no other checks of supplied object instance identifiers shall be made.
            If a requested aggregation is unknown then an UNKNOWN error shall be returned.
            The filter shall not be applied for the getValue operation.
            If an aggregation is being reported periodically, using the operation shall not reset the reportInterval or filteredTimeout timer.
    Aggregation_getValue_Receive:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        aggValDetails:
          $ref: '#/components/schemas/mc/aggregation/AggregationValueDetails'
          description: |
            The response shall contain a list of returned AggregationIdentity and AggregationDefinition object instance identifier pairs and a matching list of AggregationValues.
            The new value shall not be published via the monitorValue operation.
    Aggregation_getValue_Error:
      type: object
      properties:
        transactionId:
          type: string
          description: A unique identifier to map the response to the request.
        area:
          type: string
          description: The area in which the error applies.
          enum:
            - MAL
        name:
          type: string
          description: A code representing the error.
          enum:
            - UNKNOWN
        extraInformation:
          type: array
          items:
            type: integer
            format: uint32
            description: A list of the indexes of the error values shall be contained in the extra information field.
    mc:
      aggregation:
        AggregationParameterValue:
          properties:
            paramDefInstId:
              description: The object instance identifier of the ParameterDefinition. NULL if
                sendDefinitions in the AggregationDefinitionDetails is FALSE.
              format: int64
              type: integer
            value:
              $ref: '#/components/schemas/mc/parameter/ParameterValue'
              description: The parameter value.
          type: object
        AggregationSetValue:
          properties:
            deltaTime:
              description: Optional delta time, from the timestamp of the aggregation for the
                first parameter set of the aggregation or the last value of the previous parameter
                set otherwise, for the first parameter sample of this set. If NULL, then the
                first sample time is the same as the aggregation timestamp for the first parameter
                set of the aggregation or the last value of the previous parameter set otherwise.
              format: uint64
              type: number
            intervalTime:
              description: Optional delta time between samples in this set. If NULL, then all
                samples in this set are given the same time. This is usually driven by the sampleInterval
                in the aggregation set definition.
              format: uint64
              type: number
            values:
              description: List containing values of the parameters which are part of the aggregation.
                The ordering of the list entries shall match that of the definition of the aggregation.
                If there are more values than contained in the definition then it is assumed
                that the parameters cycle as a complete parameter set.
              items:
                $ref: '#/components/schemas/mc/aggregation/AggregationParameterValue'
              type: array
          type: object
        AggregationValue:
          properties:
            filtered:
              description: If a filter is enabled when the aggregation value is generated then
                this value shall be set to TRUE, else FALSE.
              type: boolean
            generationMode:
              $ref: '#/components/schemas/mc/aggregation/GenerationMode'
              description: Reason for the aggregation being generated.
            parameterSetValues:
              description: The parameterSetValues list holds the sets of values of the aggregation.
                The sets must be held in the same order as that defined in the aggregation definition.
              items:
                $ref: '#/components/schemas/mc/aggregation/AggregationSetValue'
              type: array
          type: object
        AggregationValueDetails:
          properties:
            aggId:
              description: The AggregationIdentity object instance identifier.
              format: int64
              type: integer
            defId:
              description: The AggregationDefinition object instance identifier.
              format: int64
              type: integer
            timestamp:
              description: The timestamp of the value. Use for the calculation of the individual
                parameter value timestamps.
              format: uint64
              type: number
            value:
              $ref: '#/components/schemas/mc/aggregation/AggregationValue'
              description: The aggregation value.
          type: object
        GenerationMode:
          description: GenerationMode is an enumeration definition holding the reasons for the
            aggregation to be generated.
          enum:
          - ADHOC
          - PERIODIC
          - FILTERED_TIMEOUT
          type: string
      parameter:
        ParameterValue:
          properties:
            convertedValue:
              description: The parameter converted value.
              type: string
            rawValue:
              description: The parameter raw value. The value of NULL is a valid value and carries
                no special significance in the parameter service.
              type: string
            validityState:
              description: Holds the validity state for a parameter value. If the parameter
                is valid then this should be set to '0'.
              format: uint8
              type: integer
          type: object
  messages:
    Aggregation_getValue_Send:
      description: Aggregation getValue request submission
      payload:
        $ref: '#/components/schemas/Aggregation_getValue_Send'
    Aggregation_getValue_Receive:
      description: Aggregation getValue update response
      payload:
        $ref: '#/components/schemas/Aggregation_getValue_Receive'
    Aggregation_getValue_Error:
      description: Aggregation getValue error response
      payload:
        $ref: '#/components/schemas/Aggregation_getValue_Error'
